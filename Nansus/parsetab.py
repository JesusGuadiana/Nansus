
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BACK CIRCLE COLOR CSTC CSTF CSTI DIVIDE DO ELSE ELSEIF EOS EQUAL EQUALS FILLSHAPE FORWARD FUNCTION GREATER GREATEREQUAL ID IF JEDO LEFTB LEFTBRACE LEFTP LESS LESSEQUAL MAIN MINUS MULTIPLY NOTEQUAL NOTYPE OR PLUS POINT PRGM PRINT READINPUT RECTANGLE RESTART RETURN RIGHTB RIGHTBRACE RIGHTP SEPARATOR SQUARE STARTFILL STARTPEN STOPFILL STOPPEN THICKNESS TRIANGLE TURNLEFT TURNRIGHT TYPECHAR TYPEFLOAT TYPEINT WHILEprogram : PRGM ID main_quad add_program_function EOS program_primeprogram_prime : vars program_prime\n\t\t\t\t\t| modules program_prime\n\t\t\t\t\t| program_second_primeprogram_second_prime : MAIN fill_main LEFTBRACE program_third_primeprogram_third_prime : vars program_third_prime\n\t\t\t\t\t\t\t| body RIGHTBRACE EOSmain_quad : add_program_function : fill_main : vars : type vars_prime vars_fourth_prime vars_prime : ID save_id vars_second_primevars_second_prime : change_dimension LEFTB exp RIGHTB first_dimension vars_third_prime\n\t\t\t\t\t\t| first_dimension : vars_third_prime : LEFTB exp RIGHTB second_dimension dimensional_address_allocation\n\t\t\t   | dimensional_address_allocationsecond_dimension : dimensional_address_allocation : vars_fourth_prime : SEPARATOR store_variable vars_prime vars_fourth_prime\n\t\t\t\t   | store_variable vars_fifth_primevars_fifth_prime : EOSsave_id : change_dimension : store_variable : type : TYPEINT\n\t\t\t| TYPEFLOAT\n\t\t\t| TYPECHARbody : statement body_primebody_prime : body\n\t\t\t\t   | modules : FUNCTION modules_prime ID add_module LEFTP modules_second_primemodules_prime : type\n\t\t\t\t   | NOTYPE void_typemodules_second_prime : type ID add_parameter modules_third_primemodules_third_prime : SEPARATOR modules_second_prime\n\t\t\t\t   | RIGHTP LEFTBRACE modules_fourth_primemodules_fourth_prime : vars modules_fourth_prime\n\t\t\t\t\t\t\t| body modules_fifth_primemodules_fifth_prime : RETURN exp return_quad EOS RIGHTBRACE endproc_quad\n\t\t\t\t\t\t\t| RIGHTBRACE endproc_quadvoid_type : add_module : add_parameter : return_quad : endproc_quad : statement : assignment EOS\n\t\t\t| print EOS\n\t\t\t| functioncall EOS\n\t\t\t| condition\n\t\t\t| specialfunction EOS\n\t\t\t| input EOScompoundexp : expression eval_logic compoundexp_primecompoundexp_prime : AND push_operator compoundexp\n\t\t\t| OR push_operator compoundexp\n\t\t\t| eval_logic :expression : exp eval_relational expression_primeexpression_prime : GREATER push_operator expression\n\t\t\t\t\t| LESS push_operator expression\n\t\t\t\t\t| EQUAL push_operator expression\n\t\t\t\t\t| NOTEQUAL push_operator expression\n\t\t\t\t\t| GREATEREQUAL push_operator expression\n\t\t\t\t\t| LESSEQUAL push_operator expression\n\t\t\t\t\t| eval_relational :exp : term eval_term exp_primeexp_prime : PLUS push_operator exp\n\t\t\t\t\t| MINUS push_operator exp\n\t\t\t\t\t| eval_term :term : factor eval_factor term_primeterm_prime : MULTIPLY push_operator term\n\t\t\t| DIVIDE push_operator term\n\t\t\t| eval_factor :factor : LEFTP fake_bottom expression RIGHTP pop_fake_bottom\n\t\t\t| operand\n\t\t\t| PLUS operand\n\t\t\t| MINUS operandfake_bottom : pop_fake_bottom : operand : CSTI evaluate_operation_int\n\t\t\t| CSTF evaluate_operation_float\n\t\t\t| CSTC evaluate_operation_char\n\t\t\t| ID push_id operand_primeoperand_prime : LEFTB exp RIGHTB operand_second_prime\n\t\t\t| LEFTP exp operand_third_prime\n\t\t\t| operand_second_prime : \n\t\t\t| LEFTB exp RIGHTBoperand_third_prime : SEPARATOR exp operand_third_prime\n\t\t\t| RIGHTPpush_id : evaluate_operation_int : evaluate_operation_float : evaluate_operation_char : assignment : ID push_id assignment_prime EQUALS push_operator expression eval_assignmentassignment_prime : \n\t\t\t\t   | LEFTB exp RIGHTB assignment_second_primeassignment_second_prime : \n\t\t\t\t   | LEFTB exp RIGHTBeval_assignment : condition : WHILE save_jump LEFTP compoundexp RIGHTP gotof_quad LEFTBRACE body RIGHTBRACE goto_while_fill\n\t\t\t\t   | DO save_jump LEFTBRACE body RIGHTBRACE WHILE LEFTP compoundexp RIGHTP gotov_quad\n\t\t\t\t   | IF condition_primecondition_prime : LEFTP compoundexp RIGHTP gotof_quad condition_second_primecondition_second_prime : statement condition_third_prime\n\t\t\t\t\t| LEFTBRACE body RIGHTBRACE condition_third_primecondition_third_prime : goto_if_fill ELSEIF condition_prime\n\t\t\t\t\t| ELSE goto_else condition_fourth_prime\n\t\t\t\t\t| goto_if_fillcondition_fourth_prime : statement goto_if_fill\n\t\t\t\t\t| LEFTBRACE body RIGHTBRACE goto_if_fillsave_jump :gotof_quad :goto_else : gotov_quad : goto_if_fill :goto_while_fill :functioncall : ID verify_function LEFTP fake_bottom exp verify_parameter functioncall_primefunctioncall_prime : SEPARATOR exp verify_parameter functioncall_prime\n\t\t\t\t\t| verify_param_count RIGHTP pop_fake_bottom store_memory_data go_sub_quadverify_function : verify_parameter : verify_param_count : store_memory_data : go_sub_quad : push_operator : print : PRINT LEFTP expression print_quad print_primeprint_prime : SEPARATOR expression print_quad print_prime\n\t\t\t\t\t| RIGHTPprint_quad : specialfunction : JEDO POINT specialfunction_primespecialfunction_prime : CIRCLE LEFTP exp RIGHTP one_argument_quad\n\t\t\t| SQUARE LEFTP exp RIGHTP one_argument_quad\n\t\t\t| RECTANGLE LEFTP exp SEPARATOR exp RIGHTP two_argument_quad\n\t\t\t| TRIANGLE LEFTP exp RIGHTP one_argument_quad\n\t\t\t| FORWARD LEFTP exp RIGHTP one_argument_quad\n\t\t\t| BACK LEFTP exp RIGHTP one_argument_quad\n\t\t\t| TURNRIGHT LEFTP exp RIGHTP one_argument_quad\n\t\t\t| TURNLEFT LEFTP exp RIGHTP one_argument_quad\n\t\t\t| COLOR LEFTP exp SEPARATOR exp SEPARATOR exp RIGHTP three_argument_quad\n\t\t\t| THICKNESS LEFTP exp RIGHTP one_argument_quad\n\t\t\t| STARTPEN LEFTP RIGHTP no_argument_quad\n\t\t\t| STOPPEN LEFTP RIGHTP no_argument_quad\n\t\t\t| STARTFILL LEFTP RIGHTP no_argument_quad\n\t\t\t| FILLSHAPE LEFTP exp SEPARATOR exp SEPARATOR exp RIGHTP three_argument_quad\n\t\t\t| STOPFILL LEFTP RIGHTP no_argument_quad\n\t\t\t| RESTART LEFTP RIGHTP no_argument_quad\n\t\t\t| no_argument_quad :one_argument_quad :two_argument_quad :three_argument_quad :input : READINPUT LEFTP ID input_quad RIGHTPinput_quad : '
    
_lr_action_items = {'PRGM':([0,],[2,]),'$end':([1,7,10,17,18,38,58,90,],[0,-1,-4,-2,-3,-5,-6,-7,]),'ID':([2,11,14,15,16,21,22,23,25,26,30,31,32,33,34,39,41,45,56,62,63,64,65,66,69,72,73,75,76,80,82,83,89,92,93,96,97,121,129,131,136,138,139,140,141,142,143,144,145,146,147,151,157,158,160,161,164,165,167,171,174,175,176,177,178,179,182,184,185,203,206,207,208,209,217,221,222,223,224,225,226,229,230,231,232,233,236,242,247,258,261,265,274,275,276,277,278,294,298,307,308,310,311,317,321,322,323,324,325,326,327,337,338,339,345,349,],[3,20,-26,-27,-28,29,-33,-42,-11,-25,-34,48,20,-21,-22,48,48,-50,87,-47,-48,-49,-51,-52,87,-106,87,117,-20,-81,87,87,128,87,-81,87,48,87,-129,87,-116,87,87,87,87,87,87,87,87,87,87,87,-129,-129,-129,-129,87,87,87,87,-129,-129,-129,-129,-129,-129,48,-129,-129,87,87,87,87,87,87,87,87,87,87,87,87,-107,-119,48,87,87,87,87,87,87,48,87,48,87,-108,-112,-117,87,48,48,-119,87,87,87,-120,-118,-110,-111,-119,48,-109,-104,-105,-113,-119,-114,]),'EOS':([3,4,5,19,20,27,28,35,42,43,44,46,47,55,59,74,78,79,81,84,85,86,87,95,100,118,119,120,122,123,124,125,126,127,133,155,156,159,163,170,172,173,196,197,198,200,201,202,204,205,210,216,234,235,237,238,239,240,241,243,244,245,246,248,249,251,252,253,254,255,256,257,259,262,264,268,269,270,271,272,273,282,283,285,286,287,288,289,291,293,295,302,303,309,312,314,320,328,331,332,333,335,336,341,342,343,344,346,347,],[-8,-9,6,-25,-23,34,-14,-12,62,63,64,65,66,-25,90,-151,-71,-76,-78,-95,-96,-97,-94,-66,-134,-15,-70,-75,-79,-80,-83,-84,-85,-89,-65,-19,-67,-72,-86,-130,-132,-58,-152,-152,-152,-152,-152,-156,-13,-17,-82,-103,-153,-153,-153,-153,-153,-153,-153,-153,-145,-146,-147,-149,-150,-68,-69,-73,-74,-77,-90,-88,-93,-98,-121,-59,-60,-61,-62,-63,-64,-135,-136,-138,-139,-140,-141,-142,-144,-18,-87,-82,-131,-154,-19,-92,-127,-137,-16,-91,-45,-122,-128,-155,-155,348,-123,-143,-148,]),'FUNCTION':([6,8,9,25,33,34,76,88,213,260,297,315,316,318,334,350,351,],[12,12,12,-11,-21,-22,-20,-32,-35,-36,-37,-38,-39,-46,-41,-46,-40,]),'MAIN':([6,8,9,25,33,34,76,88,213,260,297,315,316,318,334,350,351,],[13,13,13,-11,-21,-22,-20,-32,-35,-36,-37,-38,-39,-46,-41,-46,-40,]),'TYPEINT':([6,8,9,12,25,31,33,34,39,57,76,88,213,214,260,261,297,298,315,316,318,334,350,351,],[14,14,14,14,-11,14,-21,-22,14,14,-20,-32,-35,14,-36,14,-37,14,-38,-39,-46,-41,-46,-40,]),'TYPEFLOAT':([6,8,9,12,25,31,33,34,39,57,76,88,213,214,260,261,297,298,315,316,318,334,350,351,],[15,15,15,15,-11,15,-21,-22,15,15,-20,-32,-35,15,-36,15,-37,15,-38,-39,-46,-41,-46,-40,]),'TYPECHAR':([6,8,9,12,25,31,33,34,39,57,76,88,213,214,260,261,297,298,315,316,318,334,350,351,],[16,16,16,16,-11,16,-21,-22,16,16,-20,-32,-35,16,-36,16,-37,16,-38,-39,-46,-41,-46,-40,]),'NOTYPE':([12,],[23,]),'LEFTBRACE':([13,24,51,71,136,180,182,215,227,278,307,],[-10,31,-115,97,-116,-116,231,261,274,-117,326,]),'SEPARATOR':([19,20,28,35,55,78,79,81,84,85,86,87,94,95,118,119,120,122,123,124,125,126,127,128,132,133,155,156,159,163,166,169,173,188,194,199,204,205,210,212,219,220,251,252,253,254,255,256,257,259,267,268,269,270,271,272,273,290,292,293,295,296,301,312,314,319,331,332,],[26,-23,-14,-12,26,-71,-76,-78,-95,-96,-97,-94,-133,-66,-15,-70,-75,-79,-80,-83,-84,-85,-89,-44,171,-65,-19,-67,-72,-86,214,-125,-58,236,242,247,-13,-17,-82,258,265,-133,-68,-69,-73,-74,-77,-90,-88,-93,171,-59,-60,-61,-62,-63,-64,310,311,-18,-87,258,-125,-19,-92,265,-16,-91,]),'LEFTB':([20,28,36,48,67,87,118,127,155,168,256,],[-23,-24,56,-94,92,-94,-15,164,203,217,294,]),'PRINT':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,97,136,182,229,230,231,261,274,276,277,278,298,307,308,321,322,323,324,325,326,327,337,338,339,345,349,],[-11,49,-21,-22,49,49,-50,-47,-48,-49,-51,-52,-106,-20,49,-116,49,-107,-119,49,49,49,-108,-112,-117,49,49,-119,-120,-118,-110,-111,-119,49,-109,-104,-105,-113,-119,-114,]),'WHILE':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,97,136,181,182,229,230,231,261,274,276,277,278,298,307,308,321,322,323,324,325,326,327,337,338,339,345,349,],[-11,50,-21,-22,50,50,-50,-47,-48,-49,-51,-52,-106,-20,50,-116,228,50,-107,-119,50,50,50,-108,-112,-117,50,50,-119,-120,-118,-110,-111,-119,50,-109,-104,-105,-113,-119,-114,]),'DO':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,97,136,182,229,230,231,261,274,276,277,278,298,307,308,321,322,323,324,325,326,327,337,338,339,345,349,],[-11,51,-21,-22,51,51,-50,-47,-48,-49,-51,-52,-106,-20,51,-116,51,-107,-119,51,51,51,-108,-112,-117,51,51,-119,-120,-118,-110,-111,-119,51,-109,-104,-105,-113,-119,-114,]),'IF':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,97,136,182,229,230,231,261,274,276,277,278,298,307,308,321,322,323,324,325,326,327,337,338,339,345,349,],[-11,52,-21,-22,52,52,-50,-47,-48,-49,-51,-52,-106,-20,52,-116,52,-107,-119,52,52,52,-108,-112,-117,52,52,-119,-120,-118,-110,-111,-119,52,-109,-104,-105,-113,-119,-114,]),'JEDO':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,97,136,182,229,230,231,261,274,276,277,278,298,307,308,321,322,323,324,325,326,327,337,338,339,345,349,],[-11,53,-21,-22,53,53,-50,-47,-48,-49,-51,-52,-106,-20,53,-116,53,-107,-119,53,53,53,-108,-112,-117,53,53,-119,-120,-118,-110,-111,-119,53,-109,-104,-105,-113,-119,-114,]),'READINPUT':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,97,136,182,229,230,231,261,274,276,277,278,298,307,308,321,322,323,324,325,326,327,337,338,339,345,349,],[-11,54,-21,-22,54,54,-50,-47,-48,-49,-51,-52,-106,-20,54,-116,54,-107,-119,54,54,54,-108,-112,-117,54,54,-119,-120,-118,-110,-111,-119,54,-109,-104,-105,-113,-119,-114,]),'LEFTP':([29,37,48,49,50,52,54,56,68,69,70,73,80,87,92,93,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,127,129,131,138,139,140,141,142,143,144,145,146,147,151,157,158,160,161,164,165,167,171,174,175,176,177,178,179,184,185,203,206,207,208,209,217,221,222,223,224,225,226,228,232,233,236,242,247,258,265,275,294,306,310,311,317,],[-43,57,-124,69,-115,73,75,80,93,80,96,80,-81,-94,80,-81,80,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,80,165,-129,80,80,80,80,80,80,80,80,80,80,80,80,-129,-129,-129,-129,80,80,80,80,-129,-129,-129,-129,-129,-129,-129,-129,80,80,80,80,80,80,80,80,80,80,80,80,275,80,80,80,80,80,80,80,80,80,73,80,80,80,]),'RIGHTBRACE':([40,41,45,60,61,62,63,64,65,66,72,135,229,230,276,277,279,299,304,308,321,322,323,324,325,327,337,338,339,340,345,348,349,],[59,-31,-50,-29,-30,-47,-48,-49,-51,-52,-106,181,-107,-119,-108,-112,308,318,321,-119,-120,-118,-110,-111,-119,-109,-104,-105,-113,345,-119,350,-114,]),'RETURN':([41,45,60,61,62,63,64,65,66,72,229,230,276,277,299,308,321,322,323,324,325,327,337,338,339,345,349,],[-31,-50,-29,-30,-47,-48,-49,-51,-52,-106,-107,-119,-108,-112,317,-119,-120,-118,-110,-111,-119,-109,-104,-105,-113,-119,-114,]),'ELSE':([45,62,63,64,65,66,72,229,230,276,277,308,321,322,323,324,325,327,337,338,339,345,349,],[-50,-47,-48,-49,-51,-52,-106,-107,278,-108,-112,278,-120,-118,-110,-111,-119,-109,-104,-105,-113,-119,-114,]),'ELSEIF':([45,62,63,64,65,66,72,229,230,276,277,308,321,322,323,324,325,327,337,338,339,345,349,],[-50,-47,-48,-49,-51,-52,-106,-107,-119,-108,306,-119,-120,-118,-110,-111,-119,-109,-104,-105,-113,-119,-114,]),'EQUALS':([48,67,91,168,218,300,],[-94,-99,129,-101,-100,-102,]),'POINT':([53,],[74,]),'PLUS':([56,69,73,78,79,80,81,84,85,86,87,92,93,96,119,120,121,122,123,124,125,126,127,129,131,138,139,140,141,142,143,144,145,146,147,151,157,158,159,160,161,163,164,165,167,171,174,175,176,177,178,179,184,185,203,206,207,208,209,210,217,221,222,223,224,225,226,232,233,236,242,247,253,254,255,256,257,258,259,265,275,294,295,310,311,314,317,332,],[82,82,82,-71,-76,-81,-78,-95,-96,-97,-94,82,-81,82,157,-75,82,-79,-80,-83,-84,-85,-89,-129,82,82,82,82,82,82,82,82,82,82,82,82,-129,-129,-72,-129,-129,-86,82,82,82,82,-129,-129,-129,-129,-129,-129,-129,-129,82,82,82,82,82,-82,82,82,82,82,82,82,82,82,82,82,82,82,-73,-74,-77,-90,-88,82,-93,82,82,82,-87,82,82,-92,82,-91,]),'MINUS':([56,69,73,78,79,80,81,84,85,86,87,92,93,96,119,120,121,122,123,124,125,126,127,129,131,138,139,140,141,142,143,144,145,146,147,151,157,158,159,160,161,163,164,165,167,171,174,175,176,177,178,179,184,185,203,206,207,208,209,210,217,221,222,223,224,225,226,232,233,236,242,247,253,254,255,256,257,258,259,265,275,294,295,310,311,314,317,332,],[83,83,83,-71,-76,-81,-78,-95,-96,-97,-94,83,-81,83,158,-75,83,-79,-80,-83,-84,-85,-89,-129,83,83,83,83,83,83,83,83,83,83,83,83,-129,-129,-72,-129,-129,-86,83,83,83,83,-129,-129,-129,-129,-129,-129,-129,-129,83,83,83,83,83,-82,83,83,83,83,83,83,83,83,83,83,83,83,-73,-74,-77,-90,-88,83,-93,83,83,83,-87,83,83,-92,83,-91,]),'CSTI':([56,69,73,80,82,83,92,93,96,121,129,131,138,139,140,141,142,143,144,145,146,147,151,157,158,160,161,164,165,167,171,174,175,176,177,178,179,184,185,203,206,207,208,209,217,221,222,223,224,225,226,232,233,236,242,247,258,265,275,294,310,311,317,],[84,84,84,-81,84,84,84,-81,84,84,-129,84,84,84,84,84,84,84,84,84,84,84,84,-129,-129,-129,-129,84,84,84,84,-129,-129,-129,-129,-129,-129,-129,-129,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'CSTF':([56,69,73,80,82,83,92,93,96,121,129,131,138,139,140,141,142,143,144,145,146,147,151,157,158,160,161,164,165,167,171,174,175,176,177,178,179,184,185,203,206,207,208,209,217,221,222,223,224,225,226,232,233,236,242,247,258,265,275,294,310,311,317,],[85,85,85,-81,85,85,85,-81,85,85,-129,85,85,85,85,85,85,85,85,85,85,85,85,-129,-129,-129,-129,85,85,85,85,-129,-129,-129,-129,-129,-129,-129,-129,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'CSTC':([56,69,73,80,82,83,92,93,96,121,129,131,138,139,140,141,142,143,144,145,146,147,151,157,158,160,161,164,165,167,171,174,175,176,177,178,179,184,185,203,206,207,208,209,217,221,222,223,224,225,226,232,233,236,242,247,258,265,275,294,310,311,317,],[86,86,86,-81,86,86,86,-81,86,86,-129,86,86,86,86,86,86,86,86,86,86,86,86,-129,-129,-129,-129,86,86,86,86,-129,-129,-129,-129,-129,-129,-129,-129,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'CIRCLE':([74,],[101,]),'SQUARE':([74,],[102,]),'RECTANGLE':([74,],[103,]),'TRIANGLE':([74,],[104,]),'FORWARD':([74,],[105,]),'BACK':([74,],[106,]),'TURNRIGHT':([74,],[107,]),'TURNLEFT':([74,],[108,]),'COLOR':([74,],[109,]),'THICKNESS':([74,],[110,]),'STARTPEN':([74,],[111,]),'STOPPEN':([74,],[112,]),'STARTFILL':([74,],[113,]),'FILLSHAPE':([74,],[114,]),'STOPFILL':([74,],[115,]),'RESTART':([74,],[116,]),'RIGHTB':([77,78,79,81,84,85,86,87,119,120,122,123,124,125,126,127,130,156,159,163,210,211,250,251,252,253,254,255,256,257,259,263,295,313,314,332,],[118,-71,-76,-78,-95,-96,-97,-94,-70,-75,-79,-80,-83,-84,-85,-89,168,-67,-72,-86,-82,256,293,-68,-69,-73,-74,-77,-90,-88,-93,300,-87,332,-92,-91,]),'GREATER':([78,79,81,84,85,86,87,95,119,120,122,123,124,125,126,127,133,156,159,163,210,251,252,253,254,255,256,257,259,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-70,-75,-79,-80,-83,-84,-85,-89,174,-67,-72,-86,-82,-68,-69,-73,-74,-77,-90,-88,-93,-87,-92,-91,]),'LESS':([78,79,81,84,85,86,87,95,119,120,122,123,124,125,126,127,133,156,159,163,210,251,252,253,254,255,256,257,259,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-70,-75,-79,-80,-83,-84,-85,-89,175,-67,-72,-86,-82,-68,-69,-73,-74,-77,-90,-88,-93,-87,-92,-91,]),'EQUAL':([78,79,81,84,85,86,87,95,119,120,122,123,124,125,126,127,133,156,159,163,210,251,252,253,254,255,256,257,259,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-70,-75,-79,-80,-83,-84,-85,-89,176,-67,-72,-86,-82,-68,-69,-73,-74,-77,-90,-88,-93,-87,-92,-91,]),'NOTEQUAL':([78,79,81,84,85,86,87,95,119,120,122,123,124,125,126,127,133,156,159,163,210,251,252,253,254,255,256,257,259,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-70,-75,-79,-80,-83,-84,-85,-89,177,-67,-72,-86,-82,-68,-69,-73,-74,-77,-90,-88,-93,-87,-92,-91,]),'GREATEREQUAL':([78,79,81,84,85,86,87,95,119,120,122,123,124,125,126,127,133,156,159,163,210,251,252,253,254,255,256,257,259,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-70,-75,-79,-80,-83,-84,-85,-89,178,-67,-72,-86,-82,-68,-69,-73,-74,-77,-90,-88,-93,-87,-92,-91,]),'LESSEQUAL':([78,79,81,84,85,86,87,95,119,120,122,123,124,125,126,127,133,156,159,163,210,251,252,253,254,255,256,257,259,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-70,-75,-79,-80,-83,-84,-85,-89,179,-67,-72,-86,-82,-68,-69,-73,-74,-77,-90,-88,-93,-87,-92,-91,]),'RIGHTP':([78,79,81,84,85,86,87,94,95,98,99,117,119,120,122,123,124,125,126,127,128,132,133,134,137,148,149,150,152,153,154,156,159,162,163,166,169,173,183,186,187,189,190,191,192,193,195,210,212,219,220,251,252,253,254,255,256,257,259,266,267,268,269,270,271,272,273,280,281,284,295,296,301,305,314,319,329,330,332,],[-71,-76,-78,-95,-96,-97,-94,-133,-66,136,-57,-157,-70,-75,-79,-80,-83,-84,-85,-89,-44,172,-65,180,-56,196,197,198,200,201,202,-67,-72,210,-86,215,-125,-58,-53,234,235,237,238,239,240,241,243,-82,259,-126,-133,-68,-69,-73,-74,-77,-90,-88,-93,302,172,-59,-60,-61,-62,-63,-64,-54,-55,309,-87,259,-125,322,-92,-126,341,342,-91,]),'AND':([78,79,81,84,85,86,87,95,99,119,120,122,123,124,125,126,127,133,137,156,159,163,173,210,251,252,253,254,255,256,257,259,268,269,270,271,272,273,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-57,-70,-75,-79,-80,-83,-84,-85,-89,-65,184,-67,-72,-86,-58,-82,-68,-69,-73,-74,-77,-90,-88,-93,-59,-60,-61,-62,-63,-64,-87,-92,-91,]),'OR':([78,79,81,84,85,86,87,95,99,119,120,122,123,124,125,126,127,133,137,156,159,163,173,210,251,252,253,254,255,256,257,259,268,269,270,271,272,273,295,314,332,],[-71,-76,-78,-95,-96,-97,-94,-66,-57,-70,-75,-79,-80,-83,-84,-85,-89,-65,185,-67,-72,-86,-58,-82,-68,-69,-73,-74,-77,-90,-88,-93,-59,-60,-61,-62,-63,-64,-87,-92,-91,]),'MULTIPLY':([79,81,84,85,86,87,120,122,123,124,125,126,127,163,210,255,256,257,259,295,314,332,],[-76,-78,-95,-96,-97,-94,160,-79,-80,-83,-84,-85,-89,-86,-82,-77,-90,-88,-93,-87,-92,-91,]),'DIVIDE':([79,81,84,85,86,87,120,122,123,124,125,126,127,163,210,255,256,257,259,295,314,332,],[-76,-78,-95,-96,-97,-94,161,-79,-80,-83,-84,-85,-89,-86,-82,-77,-90,-88,-93,-87,-92,-91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'main_quad':([3,],[4,]),'add_program_function':([4,],[5,]),'program_prime':([6,8,9,],[7,17,18,]),'vars':([6,8,9,31,39,261,298,],[8,8,8,39,39,298,298,]),'modules':([6,8,9,],[9,9,9,]),'program_second_prime':([6,8,9,],[10,10,10,]),'type':([6,8,9,12,31,39,57,214,261,298,],[11,11,11,22,11,11,89,89,11,11,]),'vars_prime':([11,32,],[19,55,]),'modules_prime':([12,],[21,]),'fill_main':([13,],[24,]),'vars_fourth_prime':([19,55,],[25,76,]),'store_variable':([19,26,55,],[27,32,27,]),'save_id':([20,],[28,]),'void_type':([23,],[30,]),'vars_fifth_prime':([27,],[33,]),'vars_second_prime':([28,],[35,]),'change_dimension':([28,],[36,]),'add_module':([29,],[37,]),'program_third_prime':([31,39,],[38,58,]),'body':([31,39,41,97,231,261,274,298,326,],[40,40,61,135,279,299,304,299,340,]),'statement':([31,39,41,97,182,231,261,274,298,307,326,],[41,41,41,41,230,41,41,41,41,325,41,]),'assignment':([31,39,41,97,182,231,261,274,298,307,326,],[42,42,42,42,42,42,42,42,42,42,42,]),'print':([31,39,41,97,182,231,261,274,298,307,326,],[43,43,43,43,43,43,43,43,43,43,43,]),'functioncall':([31,39,41,97,182,231,261,274,298,307,326,],[44,44,44,44,44,44,44,44,44,44,44,]),'condition':([31,39,41,97,182,231,261,274,298,307,326,],[45,45,45,45,45,45,45,45,45,45,45,]),'specialfunction':([31,39,41,97,182,231,261,274,298,307,326,],[46,46,46,46,46,46,46,46,46,46,46,]),'input':([31,39,41,97,182,231,261,274,298,307,326,],[47,47,47,47,47,47,47,47,47,47,47,]),'body_prime':([41,],[60,]),'push_id':([48,87,],[67,127,]),'verify_function':([48,],[68,]),'save_jump':([50,51,],[70,71,]),'condition_prime':([52,306,],[72,323,]),'exp':([56,69,73,92,96,121,131,138,139,140,141,142,143,144,145,146,147,151,164,165,167,171,203,206,207,217,221,222,223,224,225,226,232,233,236,242,247,258,265,275,294,310,311,317,],[77,95,95,130,95,95,169,186,187,188,189,190,191,192,193,194,195,199,211,212,95,95,250,251,252,263,95,95,95,95,95,95,95,95,284,290,292,296,301,95,313,329,330,333,]),'term':([56,69,73,92,96,121,131,138,139,140,141,142,143,144,145,146,147,151,164,165,167,171,203,206,207,208,209,217,221,222,223,224,225,226,232,233,236,242,247,258,265,275,294,310,311,317,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,253,254,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'factor':([56,69,73,92,96,121,131,138,139,140,141,142,143,144,145,146,147,151,164,165,167,171,203,206,207,208,209,217,221,222,223,224,225,226,232,233,236,242,247,258,265,275,294,310,311,317,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'operand':([56,69,73,82,83,92,96,121,131,138,139,140,141,142,143,144,145,146,147,151,164,165,167,171,203,206,207,208,209,217,221,222,223,224,225,226,232,233,236,242,247,258,265,275,294,310,311,317,],[81,81,81,122,123,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'modules_second_prime':([57,214,],[88,260,]),'assignment_prime':([67,],[91,]),'expression':([69,73,96,121,167,171,221,222,223,224,225,226,232,233,275,],[94,99,99,162,216,220,268,269,270,271,272,273,99,99,99,]),'compoundexp':([73,96,232,233,275,],[98,134,280,281,305,]),'specialfunction_prime':([74,],[100,]),'eval_term':([78,],[119,]),'eval_factor':([79,],[120,]),'fake_bottom':([80,93,],[121,131,]),'evaluate_operation_int':([84,],[124,]),'evaluate_operation_float':([85,],[125,]),'evaluate_operation_char':([86,],[126,]),'print_quad':([94,220,],[132,267,]),'eval_relational':([95,],[133,]),'eval_logic':([99,],[137,]),'input_quad':([117,],[154,]),'first_dimension':([118,],[155,]),'exp_prime':([119,],[156,]),'term_prime':([120,],[159,]),'operand_prime':([127,],[163,]),'add_parameter':([128,],[166,]),'push_operator':([129,157,158,160,161,174,175,176,177,178,179,184,185,],[167,206,207,208,209,221,222,223,224,225,226,232,233,]),'print_prime':([132,267,],[170,303,]),'expression_prime':([133,],[173,]),'gotof_quad':([136,180,],[182,227,]),'compoundexp_prime':([137,],[183,]),'vars_third_prime':([155,],[204,]),'dimensional_address_allocation':([155,312,],[205,331,]),'modules_third_prime':([166,],[213,]),'assignment_second_prime':([168,],[218,]),'verify_parameter':([169,301,],[219,319,]),'condition_second_prime':([182,],[229,]),'no_argument_quad':([196,197,198,200,201,],[244,245,246,248,249,]),'pop_fake_bottom':([210,302,],[255,320,]),'operand_third_prime':([212,296,],[257,314,]),'eval_assignment':([216,],[262,]),'functioncall_prime':([219,319,],[264,335,]),'verify_param_count':([219,319,],[266,266,]),'condition_third_prime':([230,308,],[276,327,]),'goto_if_fill':([230,308,325,345,],[277,277,339,349,]),'one_argument_quad':([234,235,237,238,239,240,241,243,],[282,283,285,286,287,288,289,291,]),'operand_second_prime':([256,],[295,]),'modules_fourth_prime':([261,298,],[297,315,]),'goto_else':([278,],[307,]),'second_dimension':([293,],[312,]),'modules_fifth_prime':([299,],[316,]),'condition_fourth_prime':([307,],[324,]),'two_argument_quad':([309,],[328,]),'endproc_quad':([318,350,],[334,351,]),'store_memory_data':([320,],[336,]),'goto_while_fill':([321,],[337,]),'gotov_quad':([322,],[338,]),'return_quad':([333,],[343,]),'go_sub_quad':([336,],[344,]),'three_argument_quad':([341,342,],[346,347,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PRGM ID main_quad add_program_function EOS program_prime','program',6,'p_program','nansus.py',56),
  ('program_prime -> vars program_prime','program_prime',2,'p_program_prime','nansus.py',59),
  ('program_prime -> modules program_prime','program_prime',2,'p_program_prime','nansus.py',60),
  ('program_prime -> program_second_prime','program_prime',1,'p_program_prime','nansus.py',61),
  ('program_second_prime -> MAIN fill_main LEFTBRACE program_third_prime','program_second_prime',4,'p_program_second_prime','nansus.py',64),
  ('program_third_prime -> vars program_third_prime','program_third_prime',2,'p_program_third_prime','nansus.py',67),
  ('program_third_prime -> body RIGHTBRACE EOS','program_third_prime',3,'p_program_third_prime','nansus.py',68),
  ('main_quad -> <empty>','main_quad',0,'p_main_quad','nansus.py',73),
  ('add_program_function -> <empty>','add_program_function',0,'p_add_program_function','nansus.py',79),
  ('fill_main -> <empty>','fill_main',0,'p_fill_main','nansus.py',85),
  ('vars -> type vars_prime vars_fourth_prime','vars',3,'p_vars','nansus.py',97),
  ('vars_prime -> ID save_id vars_second_prime','vars_prime',3,'p_vars_prime','nansus.py',100),
  ('vars_second_prime -> change_dimension LEFTB exp RIGHTB first_dimension vars_third_prime','vars_second_prime',6,'p_vars_second_prime','nansus.py',103),
  ('vars_second_prime -> <empty>','vars_second_prime',0,'p_vars_second_prime','nansus.py',104),
  ('first_dimension -> <empty>','first_dimension',0,'p_first_dimension','nansus.py',107),
  ('vars_third_prime -> LEFTB exp RIGHTB second_dimension dimensional_address_allocation','vars_third_prime',5,'p_vars_third_prime','nansus.py',117),
  ('vars_third_prime -> dimensional_address_allocation','vars_third_prime',1,'p_vars_third_prime','nansus.py',118),
  ('second_dimension -> <empty>','second_dimension',0,'p_second_dimension','nansus.py',121),
  ('dimensional_address_allocation -> <empty>','dimensional_address_allocation',0,'p_dimensional_address_allocation','nansus.py',130),
  ('vars_fourth_prime -> SEPARATOR store_variable vars_prime vars_fourth_prime','vars_fourth_prime',4,'p_vars_fourth_prime','nansus.py',138),
  ('vars_fourth_prime -> store_variable vars_fifth_prime','vars_fourth_prime',2,'p_vars_fourth_prime','nansus.py',139),
  ('vars_fifth_prime -> EOS','vars_fifth_prime',1,'p_vars_fifth_prime','nansus.py',142),
  ('save_id -> <empty>','save_id',0,'p_save_id','nansus.py',147),
  ('change_dimension -> <empty>','change_dimension',0,'p_change_dimension','nansus.py',152),
  ('store_variable -> <empty>','store_variable',0,'p_store_variable','nansus.py',157),
  ('type -> TYPEINT','type',1,'p_type','nansus.py',168),
  ('type -> TYPEFLOAT','type',1,'p_type','nansus.py',169),
  ('type -> TYPECHAR','type',1,'p_type','nansus.py',170),
  ('body -> statement body_prime','body',2,'p_body','nansus.py',182),
  ('body_prime -> body','body_prime',1,'p_body_prime','nansus.py',185),
  ('body_prime -> <empty>','body_prime',0,'p_body_prime','nansus.py',186),
  ('modules -> FUNCTION modules_prime ID add_module LEFTP modules_second_prime','modules',6,'p_modules','nansus.py',195),
  ('modules_prime -> type','modules_prime',1,'p_modules_prime','nansus.py',198),
  ('modules_prime -> NOTYPE void_type','modules_prime',2,'p_modules_prime','nansus.py',199),
  ('modules_second_prime -> type ID add_parameter modules_third_prime','modules_second_prime',4,'p_modules_second_prime','nansus.py',202),
  ('modules_third_prime -> SEPARATOR modules_second_prime','modules_third_prime',2,'p_modules_third_prime','nansus.py',205),
  ('modules_third_prime -> RIGHTP LEFTBRACE modules_fourth_prime','modules_third_prime',3,'p_modules_third_prime','nansus.py',206),
  ('modules_fourth_prime -> vars modules_fourth_prime','modules_fourth_prime',2,'p_modules_fourth_prime','nansus.py',209),
  ('modules_fourth_prime -> body modules_fifth_prime','modules_fourth_prime',2,'p_modules_fourth_prime','nansus.py',210),
  ('modules_fifth_prime -> RETURN exp return_quad EOS RIGHTBRACE endproc_quad','modules_fifth_prime',6,'p_modules_fifth_prime','nansus.py',213),
  ('modules_fifth_prime -> RIGHTBRACE endproc_quad','modules_fifth_prime',2,'p_modules_fifth_prime','nansus.py',214),
  ('void_type -> <empty>','void_type',0,'p_void_type','nansus.py',219),
  ('add_module -> <empty>','add_module',0,'p_add_module','nansus.py',224),
  ('add_parameter -> <empty>','add_parameter',0,'p_add_parameter','nansus.py',230),
  ('return_quad -> <empty>','return_quad',0,'p_return_quad','nansus.py',235),
  ('endproc_quad -> <empty>','endproc_quad',0,'p_endproc_quad','nansus.py',240),
  ('statement -> assignment EOS','statement',2,'p_statement','nansus.py',249),
  ('statement -> print EOS','statement',2,'p_statement','nansus.py',250),
  ('statement -> functioncall EOS','statement',2,'p_statement','nansus.py',251),
  ('statement -> condition','statement',1,'p_statement','nansus.py',252),
  ('statement -> specialfunction EOS','statement',2,'p_statement','nansus.py',253),
  ('statement -> input EOS','statement',2,'p_statement','nansus.py',254),
  ('compoundexp -> expression eval_logic compoundexp_prime','compoundexp',3,'p_compoundexp','nansus.py',272),
  ('compoundexp_prime -> AND push_operator compoundexp','compoundexp_prime',3,'p_compoundexp_prime','nansus.py',275),
  ('compoundexp_prime -> OR push_operator compoundexp','compoundexp_prime',3,'p_compoundexp_prime','nansus.py',276),
  ('compoundexp_prime -> <empty>','compoundexp_prime',0,'p_compoundexp_prime','nansus.py',277),
  ('eval_logic -> <empty>','eval_logic',0,'p_eval_logic','nansus.py',281),
  ('expression -> exp eval_relational expression_prime','expression',3,'p_expression','nansus.py',293),
  ('expression_prime -> GREATER push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',296),
  ('expression_prime -> LESS push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',297),
  ('expression_prime -> EQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',298),
  ('expression_prime -> NOTEQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',299),
  ('expression_prime -> GREATEREQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',300),
  ('expression_prime -> LESSEQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',301),
  ('expression_prime -> <empty>','expression_prime',0,'p_expression_prime','nansus.py',302),
  ('eval_relational -> <empty>','eval_relational',0,'p_eval_relational','nansus.py',306),
  ('exp -> term eval_term exp_prime','exp',3,'p_exp','nansus.py',319),
  ('exp_prime -> PLUS push_operator exp','exp_prime',3,'p_exp_prime','nansus.py',322),
  ('exp_prime -> MINUS push_operator exp','exp_prime',3,'p_exp_prime','nansus.py',323),
  ('exp_prime -> <empty>','exp_prime',0,'p_exp_prime','nansus.py',324),
  ('eval_term -> <empty>','eval_term',0,'p_eval_term','nansus.py',328),
  ('term -> factor eval_factor term_prime','term',3,'p_term','nansus.py',339),
  ('term_prime -> MULTIPLY push_operator term','term_prime',3,'p_term_prime','nansus.py',342),
  ('term_prime -> DIVIDE push_operator term','term_prime',3,'p_term_prime','nansus.py',343),
  ('term_prime -> <empty>','term_prime',0,'p_term_prime','nansus.py',344),
  ('eval_factor -> <empty>','eval_factor',0,'p_eval_factor','nansus.py',348),
  ('factor -> LEFTP fake_bottom expression RIGHTP pop_fake_bottom','factor',5,'p_factor','nansus.py',359),
  ('factor -> operand','factor',1,'p_factor','nansus.py',360),
  ('factor -> PLUS operand','factor',2,'p_factor','nansus.py',361),
  ('factor -> MINUS operand','factor',2,'p_factor','nansus.py',362),
  ('fake_bottom -> <empty>','fake_bottom',0,'p_fake_bottom','nansus.py',366),
  ('pop_fake_bottom -> <empty>','pop_fake_bottom',0,'p_pop_fake_bottom','nansus.py',371),
  ('operand -> CSTI evaluate_operation_int','operand',2,'p_operand','nansus.py',380),
  ('operand -> CSTF evaluate_operation_float','operand',2,'p_operand','nansus.py',381),
  ('operand -> CSTC evaluate_operation_char','operand',2,'p_operand','nansus.py',382),
  ('operand -> ID push_id operand_prime','operand',3,'p_operand','nansus.py',383),
  ('operand_prime -> LEFTB exp RIGHTB operand_second_prime','operand_prime',4,'p_operand_prime','nansus.py',386),
  ('operand_prime -> LEFTP exp operand_third_prime','operand_prime',3,'p_operand_prime','nansus.py',387),
  ('operand_prime -> <empty>','operand_prime',0,'p_operand_prime','nansus.py',388),
  ('operand_second_prime -> <empty>','operand_second_prime',0,'p_operand_second_prime','nansus.py',391),
  ('operand_second_prime -> LEFTB exp RIGHTB','operand_second_prime',3,'p_operand_second_prime','nansus.py',392),
  ('operand_third_prime -> SEPARATOR exp operand_third_prime','operand_third_prime',3,'p_operand_third_prime','nansus.py',395),
  ('operand_third_prime -> RIGHTP','operand_third_prime',1,'p_operand_third_prime','nansus.py',396),
  ('push_id -> <empty>','push_id',0,'p_push_id','nansus.py',400),
  ('evaluate_operation_int -> <empty>','evaluate_operation_int',0,'p_evaluate_operation_int','nansus.py',405),
  ('evaluate_operation_float -> <empty>','evaluate_operation_float',0,'p_evaluate_operation_float','nansus.py',409),
  ('evaluate_operation_char -> <empty>','evaluate_operation_char',0,'p_evaluate_operation_char','nansus.py',413),
  ('assignment -> ID push_id assignment_prime EQUALS push_operator expression eval_assignment','assignment',7,'p_assignment','nansus.py',422),
  ('assignment_prime -> <empty>','assignment_prime',0,'p_assignment_prime','nansus.py',425),
  ('assignment_prime -> LEFTB exp RIGHTB assignment_second_prime','assignment_prime',4,'p_assignment_prime','nansus.py',426),
  ('assignment_second_prime -> <empty>','assignment_second_prime',0,'p_assignment_second_prime','nansus.py',429),
  ('assignment_second_prime -> LEFTB exp RIGHTB','assignment_second_prime',3,'p_assignment_second_prime','nansus.py',430),
  ('eval_assignment -> <empty>','eval_assignment',0,'p_eval_assignment','nansus.py',435),
  ('condition -> WHILE save_jump LEFTP compoundexp RIGHTP gotof_quad LEFTBRACE body RIGHTBRACE goto_while_fill','condition',10,'p_condition','nansus.py',445),
  ('condition -> DO save_jump LEFTBRACE body RIGHTBRACE WHILE LEFTP compoundexp RIGHTP gotov_quad','condition',10,'p_condition','nansus.py',446),
  ('condition -> IF condition_prime','condition',2,'p_condition','nansus.py',447),
  ('condition_prime -> LEFTP compoundexp RIGHTP gotof_quad condition_second_prime','condition_prime',5,'p_condition_prime','nansus.py',450),
  ('condition_second_prime -> statement condition_third_prime','condition_second_prime',2,'p_condition_second_prime','nansus.py',453),
  ('condition_second_prime -> LEFTBRACE body RIGHTBRACE condition_third_prime','condition_second_prime',4,'p_condition_second_prime','nansus.py',454),
  ('condition_third_prime -> goto_if_fill ELSEIF condition_prime','condition_third_prime',3,'p_condition_third_prime','nansus.py',457),
  ('condition_third_prime -> ELSE goto_else condition_fourth_prime','condition_third_prime',3,'p_condition_third_prime','nansus.py',458),
  ('condition_third_prime -> goto_if_fill','condition_third_prime',1,'p_condition_third_prime','nansus.py',459),
  ('condition_fourth_prime -> statement goto_if_fill','condition_fourth_prime',2,'p_condition_fourth_prime','nansus.py',462),
  ('condition_fourth_prime -> LEFTBRACE body RIGHTBRACE goto_if_fill','condition_fourth_prime',4,'p_condition_fourth_prime','nansus.py',463),
  ('save_jump -> <empty>','save_jump',0,'p_save_jump','nansus.py',466),
  ('gotof_quad -> <empty>','gotof_quad',0,'p_gotof_quad','nansus.py',470),
  ('goto_else -> <empty>','goto_else',0,'p_goto_else','nansus.py',481),
  ('gotov_quad -> <empty>','gotov_quad',0,'p_gotov_quad','nansus.py',490),
  ('goto_if_fill -> <empty>','goto_if_fill',0,'p_goto_if_fill','nansus.py',501),
  ('goto_while_fill -> <empty>','goto_while_fill',0,'p_goto_while_fill','nansus.py',507),
  ('functioncall -> ID verify_function LEFTP fake_bottom exp verify_parameter functioncall_prime','functioncall',7,'p_functioncall','nansus.py',520),
  ('functioncall_prime -> SEPARATOR exp verify_parameter functioncall_prime','functioncall_prime',4,'p_functioncall_prime','nansus.py',523),
  ('functioncall_prime -> verify_param_count RIGHTP pop_fake_bottom store_memory_data go_sub_quad','functioncall_prime',5,'p_functioncall_prime','nansus.py',524),
  ('verify_function -> <empty>','verify_function',0,'p_verify_function','nansus.py',527),
  ('verify_parameter -> <empty>','verify_parameter',0,'p_verify_parameter','nansus.py',533),
  ('verify_param_count -> <empty>','verify_param_count',0,'p_verify_param_count','nansus.py',538),
  ('store_memory_data -> <empty>','store_memory_data',0,'p_store_memory_data','nansus.py',545),
  ('go_sub_quad -> <empty>','go_sub_quad',0,'p_go_sub_quad','nansus.py',549),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','nansus.py',555),
  ('print -> PRINT LEFTP expression print_quad print_prime','print',5,'p_print','nansus.py',564),
  ('print_prime -> SEPARATOR expression print_quad print_prime','print_prime',4,'p_print_prime','nansus.py',567),
  ('print_prime -> RIGHTP','print_prime',1,'p_print_prime','nansus.py',568),
  ('print_quad -> <empty>','print_quad',0,'p_print_quad','nansus.py',571),
  ('specialfunction -> JEDO POINT specialfunction_prime','specialfunction',3,'p_specialfunction','nansus.py',582),
  ('specialfunction_prime -> CIRCLE LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',585),
  ('specialfunction_prime -> SQUARE LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',586),
  ('specialfunction_prime -> RECTANGLE LEFTP exp SEPARATOR exp RIGHTP two_argument_quad','specialfunction_prime',7,'p_specialfunction_prime','nansus.py',587),
  ('specialfunction_prime -> TRIANGLE LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',588),
  ('specialfunction_prime -> FORWARD LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',589),
  ('specialfunction_prime -> BACK LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',590),
  ('specialfunction_prime -> TURNRIGHT LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',591),
  ('specialfunction_prime -> TURNLEFT LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',592),
  ('specialfunction_prime -> COLOR LEFTP exp SEPARATOR exp SEPARATOR exp RIGHTP three_argument_quad','specialfunction_prime',9,'p_specialfunction_prime','nansus.py',593),
  ('specialfunction_prime -> THICKNESS LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',594),
  ('specialfunction_prime -> STARTPEN LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',595),
  ('specialfunction_prime -> STOPPEN LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',596),
  ('specialfunction_prime -> STARTFILL LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',597),
  ('specialfunction_prime -> FILLSHAPE LEFTP exp SEPARATOR exp SEPARATOR exp RIGHTP three_argument_quad','specialfunction_prime',9,'p_specialfunction_prime','nansus.py',598),
  ('specialfunction_prime -> STOPFILL LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',599),
  ('specialfunction_prime -> RESTART LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',600),
  ('specialfunction_prime -> <empty>','specialfunction_prime',0,'p_specialfunction_prime','nansus.py',601),
  ('no_argument_quad -> <empty>','no_argument_quad',0,'p_no_argument_quad','nansus.py',604),
  ('one_argument_quad -> <empty>','one_argument_quad',0,'p_one_argument_quad','nansus.py',609),
  ('two_argument_quad -> <empty>','two_argument_quad',0,'p_two_argument_quad','nansus.py',614),
  ('three_argument_quad -> <empty>','three_argument_quad',0,'p_three_argument_quad','nansus.py',619),
  ('input -> READINPUT LEFTP ID input_quad RIGHTP','input',5,'p_input','nansus.py',628),
  ('input_quad -> <empty>','input_quad',0,'p_input_quad','nansus.py',631),
]
