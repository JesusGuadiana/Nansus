
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARCH BACK CIRCLE COLOR CREATE CSTC CSTF CSTI CSTS DIVIDE DO DRAWDOT ELSE ELSEIF EOS EQUAL EQUALS FILLSHAPE FORWARD FUNCTION GREATER GREATEREQUAL ID IF JEDO LEFTB LEFTBRACE LEFTP LESS LESSEQUAL MAIN MINUS MULTIPLY NOTEQUAL NOTYPE OR PLUS POINT PRGM PRINT READINPUT RECTANGLE RESTART RETURN RIGHTB RIGHTBRACE RIGHTP SEPARATOR SQUARE STARTFILL STARTPEN STOPFILL STOPPEN THICKNESS TRIANGLE TURNLEFT TURNRIGHT TYPECHAR TYPEFLOAT TYPEINT WHILEprogram : PRGM ID main_quad add_program_function EOS program_primeprogram_prime : vars program_prime\n\t\t\t\t\t| modules program_prime\n\t\t\t\t\t| program_second_primeprogram_second_prime : MAIN fill_main LEFTBRACE program_third_primeprogram_third_prime : vars program_third_prime\n\t\t\t\t\t\t\t| body RIGHTBRACE EOSmain_quad : add_program_function : fill_main : vars : type vars_prime vars_third_prime vars_prime : ID save_id vars_second_primevars_second_prime : change_dimension LEFTB exp RIGHTB first_dimension vars_fifth_prime\n\t\t\t\t\t\t| vars_third_prime : SEPARATOR store_variable vars_prime vars_third_prime\n\t\t\t\t   | store_variable vars_fourth_primevars_fourth_prime : EOSvars_fifth_prime : LEFTB exp RIGHTB second_dimension allocate_sequential_memory set_internal_dimension_one set_internal_dimension_two\n\t\t\t\t\t\t| allocate_sequential_memory set_internal_dimension_onesave_id : change_dimension : store_variable : first_dimension : second_dimension : set_internal_dimension_one : set_internal_dimension_two : allocate_sequential_memory :type : TYPEINT\n\t\t\t| TYPEFLOAT\n\t\t\t| TYPECHARbody : statement body_primebody_prime : body\n\t\t\t\t   | modules : FUNCTION modules_prime ID add_module LEFTP modules_second_primemodules_prime : type\n\t\t\t\t   | NOTYPE void_typemodules_second_prime : type ID add_parameter modules_third_primemodules_third_prime : SEPARATOR modules_second_prime\n\t\t\t\t   | RIGHTP LEFTBRACE modules_fourth_primemodules_fourth_prime : vars modules_fourth_prime\n\t\t\t\t\t\t\t| body modules_fifth_primemodules_fifth_prime : RETURN exp return_quad EOS RIGHTBRACE endproc_quad print_me\n\t\t\t\t\t\t\t| RIGHTBRACE endproc_quad print_meprint_me :void_type : add_module : add_parameter : return_quad : endproc_quad : statement : assignment EOS\n\t\t\t| print EOS\n\t\t\t| functioncall EOS\n\t\t\t| condition\n\t\t\t| specialfunction EOS\n\t\t\t| input EOScompoundexp : expression eval_logic compoundexp_primecompoundexp_prime : AND push_operator compoundexp\n\t\t\t| OR push_operator compoundexp\n\t\t\t| eval_logic :expression : exp eval_relational expression_primeexpression_prime : GREATER push_operator expression\n\t\t\t\t\t| LESS push_operator expression\n\t\t\t\t\t| EQUAL push_operator expression\n\t\t\t\t\t| NOTEQUAL push_operator expression\n\t\t\t\t\t| GREATEREQUAL push_operator expression\n\t\t\t\t\t| LESSEQUAL push_operator expression\n\t\t\t\t\t| eval_relational :exp : term eval_term exp_primeexp_prime : PLUS push_operator exp\n\t\t\t\t\t| MINUS push_operator exp\n\t\t\t\t\t| eval_term :term : factor eval_factor term_primeterm_prime : MULTIPLY push_operator term\n\t\t\t| DIVIDE push_operator term\n\t\t\t| eval_factor :factor : LEFTP fake_bottom expression RIGHTP pop_fake_bottom\n\t\t\t| operand fake_bottom : pop_fake_bottom : operand : CSTI evaluate_operation_int\n\t\t\t| CSTF evaluate_operation_float\n\t\t\t| CSTC evaluate_operation_char\n\t\t\t| ID push_id save_id_operand operand_prime\n\t\t\t| FUNCTION functioncallsave_id_operand :save_id_array :operand_prime : save_id_array LEFTB fake_bottom exp RIGHTB pop_fake_bottom operand_second_prime\n\t\t\t| operand_second_prime : LEFTB fake_bottom exp RIGHTB pop_fake_bottom quad_ver_two\n\t\t\t| quad_ver_onepush_id : evaluate_operation_int : evaluate_operation_float : evaluate_operation_char : assignment : ID push_id save_assignment_id assignment_second_prime EQUALS push_operator assignment_primeassignment_prime : exp eval_assignmentassignment_second_prime :\n\t\t\t\t   | save_id_array LEFTB fake_bottom exp RIGHTB pop_fake_bottom assignment_third_primeassignment_third_prime : LEFTB fake_bottom exp RIGHTB pop_fake_bottom quad_ver_two\n\t\t\t\t\t\t\t| quad_ver_onequad_ver_one :quad_ver_two :eval_assignment : save_assignment_id : condition : WHILE save_jump LEFTP compoundexp RIGHTP gotof_quad LEFTBRACE body RIGHTBRACE goto_while_fill\n\t\t\t\t   | DO save_jump LEFTBRACE body RIGHTBRACE WHILE LEFTP compoundexp RIGHTP gotov_quad\n\t\t\t\t   | IF condition_primecondition_prime : LEFTP compoundexp RIGHTP gotof_quad condition_second_primecondition_second_prime : statement condition_third_prime\n\t\t\t\t\t| LEFTBRACE body RIGHTBRACE condition_third_primecondition_third_prime : goto_if_fill ELSEIF condition_prime\n\t\t\t\t\t| ELSE goto_else condition_fourth_prime\n\t\t\t\t\t| goto_if_fillcondition_fourth_prime : statement goto_if_fill\n\t\t\t\t\t| LEFTBRACE body RIGHTBRACE goto_if_fillsave_jump :gotof_quad :goto_else : gotov_quad : goto_if_fill :goto_while_fill :functioncall : ID verify_function LEFTP fake_bottom exp verify_parameter functioncall_primefunctioncall_prime : SEPARATOR exp verify_parameter functioncall_prime\n\t\t\t\t\t| verify_param_count RIGHTP pop_fake_bottom go_sub_quadverify_function : verify_parameter : verify_param_count : go_sub_quad : push_operator : print : PRINT LEFTP fake_bottom print_primeprint_prime : expression print_quad print_second_prime\n\t\t\t\t\t| CSTS print_string_quad print_second_primeprint_second_prime : SEPARATOR expression print_quad print_second_prime\n\t\t\t\t\t| RIGHTP pop_fake_bottomprint_quad : print_string_quad : specialfunction : JEDO POINT specialfunction_primespecialfunction_prime : CIRCLE LEFTP exp RIGHTP one_argument_quad\n\t\t\t| SQUARE LEFTP exp RIGHTP one_argument_quad\n\t\t\t| RECTANGLE LEFTP exp SEPARATOR exp RIGHTP two_argument_quad\n\t\t\t| DRAWDOT LEFTP exp SEPARATOR CSTS RIGHTP two_argument_string_quad\n\t\t\t| ARCH LEFTP exp SEPARATOR CSTS RIGHTP two_argument_string_quad\n\t\t\t| TRIANGLE LEFTP exp RIGHTP one_argument_quad\n\t\t\t| FORWARD LEFTP exp RIGHTP one_argument_quad\n\t\t\t| BACK LEFTP exp RIGHTP one_argument_quad\n\t\t\t| TURNRIGHT LEFTP exp RIGHTP one_argument_quad\n\t\t\t| TURNLEFT LEFTP exp RIGHTP one_argument_quad\n\t\t\t| COLOR LEFTP CSTS RIGHTP special_string_quad\n\t\t\t| THICKNESS LEFTP exp RIGHTP one_argument_quad\n\t\t\t| STARTPEN LEFTP RIGHTP no_argument_quad\n\t\t\t| CREATE LEFTP RIGHTP no_argument_quad\n\t\t\t| STOPPEN LEFTP RIGHTP no_argument_quad\n\t\t\t| STARTFILL LEFTP RIGHTP no_argument_quad\n\t\t\t| FILLSHAPE LEFTP CSTS RIGHTP special_string_quad\n\t\t\t| STOPFILL LEFTP RIGHTP no_argument_quad\n\t\t\t| RESTART LEFTP RIGHTP no_argument_quad\n\t\t\t| no_argument_quad :one_argument_quad :two_argument_quad :two_argument_string_quad :special_string_quad :input : READINPUT LEFTP ID input_quad RIGHTPinput_quad : '
    
_lr_action_items = {'PRGM':([0,],[2,]),'$end':([1,7,10,17,18,38,58,89,],[0,-1,-4,-2,-3,-5,-6,-7,]),'ID':([2,11,14,15,16,21,22,23,25,26,30,31,32,33,34,39,41,45,56,62,63,64,65,66,69,72,73,75,76,80,86,88,91,92,93,94,122,132,138,141,142,143,144,145,146,147,148,149,150,152,163,164,166,167,171,172,178,180,181,183,184,185,186,187,188,209,212,213,214,215,222,223,226,231,232,233,234,235,236,237,238,239,240,241,244,268,270,275,279,280,281,282,283,307,309,319,320,328,334,335,336,337,338,339,340,348,353,354,355,361,362,364,369,370,],[3,20,-28,-29,-30,29,-35,-45,-11,-22,-36,48,20,-16,-17,48,48,-53,85,-50,-51,-52,-54,-55,-82,-111,85,118,-15,-82,128,129,-82,85,85,48,85,85,-121,85,85,85,85,85,85,85,85,85,85,85,-133,-133,-133,-133,-133,-82,48,-133,-133,-133,-133,-133,-133,-133,-133,85,85,85,85,85,85,85,85,-112,-124,48,85,85,85,85,85,85,85,85,85,-82,48,85,48,85,-113,-117,-122,85,48,48,-124,85,-125,-123,-115,-116,-124,48,-114,-82,-109,-110,-118,85,-124,-82,-119,85,]),'EOS':([3,4,5,19,20,27,28,35,42,43,44,46,47,55,59,74,78,79,81,82,83,84,85,98,119,120,121,123,124,125,126,127,133,161,162,165,169,201,202,203,204,206,207,208,210,211,216,217,225,227,228,242,243,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,271,272,274,278,293,294,298,299,300,301,302,303,304,305,306,311,314,321,322,323,324,332,333,341,342,343,344,345,346,351,352,357,358,359,363,365,366,376,379,380,],[-8,-9,6,-22,-20,34,-14,-12,62,63,64,65,66,-22,89,-161,-74,-79,-81,-96,-97,-98,-95,-141,-23,-73,-78,-84,-85,-86,-89,-88,-134,-27,-70,-75,-92,-162,-162,-162,-162,-162,-162,-167,-13,-25,-83,-87,-135,-83,-136,-163,-163,-163,-163,-163,-163,-163,-166,-163,-154,-155,-156,-157,-166,-159,-160,-19,-71,-72,-76,-77,-80,-99,-107,-126,-138,-142,-143,-147,-148,-149,-150,-151,-152,-153,-158,-24,-100,-83,-164,-165,-165,-27,-132,-137,-144,-145,-146,-25,-83,-48,-127,-128,-26,-105,367,-18,-91,-94,-83,-106,-93,]),'FUNCTION':([6,8,9,25,33,34,56,69,73,76,80,87,91,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,163,164,166,167,171,172,180,181,183,184,185,186,187,188,209,212,213,214,215,219,222,223,226,234,235,236,237,238,239,240,241,244,268,269,275,280,307,308,326,327,328,329,347,348,360,361,364,370,371,374,377,],[12,12,12,-11,-16,-17,86,-82,86,-15,-82,-34,-82,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-133,-133,-133,-133,-133,-82,-133,-133,-133,-133,-133,-133,-133,-133,86,86,86,86,86,-37,86,86,86,86,86,86,86,86,86,86,86,86,-82,-38,86,86,86,-39,-40,-41,86,-49,-44,-82,-43,86,-82,86,-49,-44,-42,]),'MAIN':([6,8,9,25,33,34,76,87,219,269,308,326,327,329,347,360,371,374,377,],[13,13,13,-11,-16,-17,-15,-34,-37,-38,-39,-40,-41,-49,-44,-43,-49,-44,-42,]),'TYPEINT':([6,8,9,12,25,31,33,34,39,57,76,87,219,220,269,270,308,309,326,327,329,347,360,371,374,377,],[14,14,14,14,-11,14,-16,-17,14,14,-15,-34,-37,14,-38,14,-39,14,-40,-41,-49,-44,-43,-49,-44,-42,]),'TYPEFLOAT':([6,8,9,12,25,31,33,34,39,57,76,87,219,220,269,270,308,309,326,327,329,347,360,371,374,377,],[15,15,15,15,-11,15,-16,-17,15,15,-15,-34,-37,15,-38,15,-39,15,-40,-41,-49,-44,-43,-49,-44,-42,]),'TYPECHAR':([6,8,9,12,25,31,33,34,39,57,76,87,219,220,269,270,308,309,326,327,329,347,360,371,374,377,],[16,16,16,16,-11,16,-16,-17,16,16,-15,-34,-37,16,-38,16,-39,16,-40,-41,-49,-44,-43,-49,-44,-42,]),'NOTYPE':([12,],[23,]),'LEFTBRACE':([13,24,51,71,138,176,178,221,229,283,319,],[-10,31,-120,94,-121,-121,233,270,279,-122,339,]),'SEPARATOR':([19,20,28,35,55,78,79,81,82,83,84,85,97,119,120,121,123,124,125,126,127,129,134,135,140,161,162,165,169,170,173,174,175,182,191,192,193,210,211,216,217,224,262,263,264,265,266,267,274,277,287,288,289,290,291,292,306,313,314,315,324,331,332,344,345,351,352,357,358,363,365,366,376,379,380,],[26,-20,-14,-12,26,-74,-79,-81,-96,-97,-98,-95,-69,-23,-73,-78,-84,-85,-86,-89,-88,-47,-139,-140,-68,-27,-70,-75,-92,220,-130,226,226,-61,244,245,246,-13,-25,-83,-87,275,-19,-71,-72,-76,-77,-80,-126,-139,-62,-63,-64,-65,-66,-67,-24,-130,-83,226,-27,275,-132,-25,-83,-127,-128,-26,-105,-18,-91,-94,-83,-106,-93,]),'LEFTB':([20,28,36,48,67,85,90,119,126,131,161,169,218,312,330,345,358,],[-20,-21,56,-95,-108,-95,-90,-23,-89,172,209,-90,268,-83,348,-83,364,]),'PRINT':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,94,138,178,231,232,233,270,279,281,282,283,309,319,320,334,335,336,337,338,339,340,353,354,355,362,369,],[-11,49,-16,-17,49,49,-53,-50,-51,-52,-54,-55,-111,-15,49,-121,49,-112,-124,49,49,49,-113,-117,-122,49,49,-124,-125,-123,-115,-116,-124,49,-114,-109,-110,-118,-124,-119,]),'WHILE':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,94,138,177,178,231,232,233,270,279,281,282,283,309,319,320,334,335,336,337,338,339,340,353,354,355,362,369,],[-11,50,-16,-17,50,50,-53,-50,-51,-52,-54,-55,-111,-15,50,-121,230,50,-112,-124,50,50,50,-113,-117,-122,50,50,-124,-125,-123,-115,-116,-124,50,-114,-109,-110,-118,-124,-119,]),'DO':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,94,138,178,231,232,233,270,279,281,282,283,309,319,320,334,335,336,337,338,339,340,353,354,355,362,369,],[-11,51,-16,-17,51,51,-53,-50,-51,-52,-54,-55,-111,-15,51,-121,51,-112,-124,51,51,51,-113,-117,-122,51,51,-124,-125,-123,-115,-116,-124,51,-114,-109,-110,-118,-124,-119,]),'IF':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,94,138,178,231,232,233,270,279,281,282,283,309,319,320,334,335,336,337,338,339,340,353,354,355,362,369,],[-11,52,-16,-17,52,52,-53,-50,-51,-52,-54,-55,-111,-15,52,-121,52,-112,-124,52,52,52,-113,-117,-122,52,52,-124,-125,-123,-115,-116,-124,52,-114,-109,-110,-118,-124,-119,]),'JEDO':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,94,138,178,231,232,233,270,279,281,282,283,309,319,320,334,335,336,337,338,339,340,353,354,355,362,369,],[-11,53,-16,-17,53,53,-53,-50,-51,-52,-54,-55,-111,-15,53,-121,53,-112,-124,53,53,53,-113,-117,-122,53,53,-124,-125,-123,-115,-116,-124,53,-114,-109,-110,-118,-124,-119,]),'READINPUT':([25,31,33,34,39,41,45,62,63,64,65,66,72,76,94,138,178,231,232,233,270,279,281,282,283,309,319,320,334,335,336,337,338,339,340,353,354,355,362,369,],[-11,54,-16,-17,54,54,-53,-50,-51,-52,-54,-55,-111,-15,54,-121,54,-112,-124,54,54,54,-113,-117,-122,54,54,-124,-125,-123,-115,-116,-124,54,-114,-109,-110,-118,-124,-119,]),'LEFTP':([29,37,48,49,50,52,54,56,68,69,70,73,80,91,92,93,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,128,132,141,142,143,144,145,146,147,148,149,150,152,163,164,166,167,171,172,180,181,183,184,185,186,187,188,209,212,213,214,215,222,223,226,230,234,235,236,237,238,239,240,241,244,268,275,280,307,318,328,348,361,364,370,],[-46,57,-129,69,-120,73,75,80,91,-82,93,80,-82,-82,80,80,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,80,-129,80,80,80,80,80,80,80,80,80,80,80,80,-133,-133,-133,-133,-133,-82,-133,-133,-133,-133,-133,-133,-133,-133,80,80,80,80,80,80,80,80,280,80,80,80,80,80,80,80,80,80,-82,80,80,80,73,80,-82,80,-82,80,]),'RIGHTBRACE':([40,41,45,60,61,62,63,64,65,66,72,137,231,232,281,282,284,310,316,320,334,335,336,337,338,340,353,354,355,356,362,367,369,],[59,-33,-53,-31,-32,-50,-51,-52,-54,-55,-111,177,-112,-124,-113,-117,320,329,334,-124,-125,-123,-115,-116,-124,-114,-109,-110,-118,362,-124,371,-119,]),'RETURN':([41,45,60,61,62,63,64,65,66,72,231,232,281,282,310,320,334,335,336,337,338,340,353,354,355,362,369,],[-33,-53,-31,-32,-50,-51,-52,-54,-55,-111,-112,-124,-113,-117,328,-124,-125,-123,-115,-116,-124,-114,-109,-110,-118,-124,-119,]),'ELSE':([45,62,63,64,65,66,72,231,232,281,282,320,334,335,336,337,338,340,353,354,355,362,369,],[-53,-50,-51,-52,-54,-55,-111,-112,283,-113,-117,283,-125,-123,-115,-116,-124,-114,-109,-110,-118,-124,-119,]),'ELSEIF':([45,62,63,64,65,66,72,231,232,281,282,320,334,335,336,337,338,340,353,354,355,362,369,],[-53,-50,-51,-52,-54,-55,-111,-112,-124,-113,318,-124,-125,-123,-115,-116,-124,-114,-109,-110,-118,-124,-119,]),'EQUALS':([48,67,90,130,312,330,349,350,372,375,378,],[-95,-108,-101,171,-83,-105,-102,-104,-83,-106,-103,]),'POINT':([53,],[74,]),'CSTI':([56,69,73,80,91,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,163,164,166,167,171,172,180,181,183,184,185,186,187,188,209,212,213,214,215,222,223,226,234,235,236,237,238,239,240,241,244,268,275,280,307,328,348,361,364,370,],[82,-82,82,-82,-82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-133,-133,-133,-133,-133,-82,-133,-133,-133,-133,-133,-133,-133,-133,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-82,82,82,82,82,-82,82,-82,82,]),'CSTF':([56,69,73,80,91,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,163,164,166,167,171,172,180,181,183,184,185,186,187,188,209,212,213,214,215,222,223,226,234,235,236,237,238,239,240,241,244,268,275,280,307,328,348,361,364,370,],[83,-82,83,-82,-82,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-133,-133,-133,-133,-133,-82,-133,-133,-133,-133,-133,-133,-133,-133,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-82,83,83,83,83,-82,83,-82,83,]),'CSTC':([56,69,73,80,91,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,163,164,166,167,171,172,180,181,183,184,185,186,187,188,209,212,213,214,215,222,223,226,234,235,236,237,238,239,240,241,244,268,275,280,307,328,348,361,364,370,],[84,-82,84,-82,-82,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-133,-133,-133,-133,-133,-82,-133,-133,-133,-133,-133,-133,-133,-133,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-82,84,84,84,84,-82,84,-82,84,]),'CSTS':([69,92,151,157,245,246,],[-82,135,199,205,296,297,]),'CIRCLE':([74,],[99,]),'SQUARE':([74,],[100,]),'RECTANGLE':([74,],[101,]),'DRAWDOT':([74,],[102,]),'ARCH':([74,],[103,]),'TRIANGLE':([74,],[104,]),'FORWARD':([74,],[105,]),'BACK':([74,],[106,]),'TURNRIGHT':([74,],[107,]),'TURNLEFT':([74,],[108,]),'COLOR':([74,],[109,]),'THICKNESS':([74,],[110,]),'STARTPEN':([74,],[111,]),'CREATE':([74,],[112,]),'STOPPEN':([74,],[113,]),'STARTFILL':([74,],[114,]),'FILLSHAPE':([74,],[115,]),'STOPFILL':([74,],[116,]),'RESTART':([74,],[117,]),'RIGHTB':([77,78,79,81,82,83,84,85,120,121,123,124,125,126,127,162,165,169,216,217,261,263,264,265,266,267,273,274,314,325,332,345,351,352,358,365,366,368,373,376,379,380,],[119,-74,-79,-81,-96,-97,-98,-95,-73,-78,-84,-85,-86,-89,-88,-70,-75,-92,-83,-87,306,-71,-72,-76,-77,-80,312,-126,-83,345,-132,-83,-127,-128,-105,-91,-94,372,376,-83,-106,-93,]),'PLUS':([78,79,81,82,83,84,85,120,121,123,124,125,126,127,165,169,216,217,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,163,-78,-84,-85,-86,-89,-88,-75,-92,-83,-87,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'MINUS':([78,79,81,82,83,84,85,120,121,123,124,125,126,127,165,169,216,217,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,164,-78,-84,-85,-86,-89,-88,-75,-92,-83,-87,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'GREATER':([78,79,81,82,83,84,85,97,120,121,123,124,125,126,127,140,162,165,169,216,217,263,264,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-69,-73,-78,-84,-85,-86,-89,-88,183,-70,-75,-92,-83,-87,-71,-72,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'LESS':([78,79,81,82,83,84,85,97,120,121,123,124,125,126,127,140,162,165,169,216,217,263,264,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-69,-73,-78,-84,-85,-86,-89,-88,184,-70,-75,-92,-83,-87,-71,-72,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'EQUAL':([78,79,81,82,83,84,85,97,120,121,123,124,125,126,127,140,162,165,169,216,217,263,264,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-69,-73,-78,-84,-85,-86,-89,-88,185,-70,-75,-92,-83,-87,-71,-72,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'NOTEQUAL':([78,79,81,82,83,84,85,97,120,121,123,124,125,126,127,140,162,165,169,216,217,263,264,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-69,-73,-78,-84,-85,-86,-89,-88,186,-70,-75,-92,-83,-87,-71,-72,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'GREATEREQUAL':([78,79,81,82,83,84,85,97,120,121,123,124,125,126,127,140,162,165,169,216,217,263,264,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-69,-73,-78,-84,-85,-86,-89,-88,187,-70,-75,-92,-83,-87,-71,-72,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'LESSEQUAL':([78,79,81,82,83,84,85,97,120,121,123,124,125,126,127,140,162,165,169,216,217,263,264,265,266,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-69,-73,-78,-84,-85,-86,-89,-88,188,-70,-75,-92,-83,-87,-71,-72,-76,-77,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'AND':([78,79,81,82,83,84,85,96,97,120,121,123,124,125,126,127,139,140,162,165,169,182,216,217,263,264,265,266,267,274,287,288,289,290,291,292,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-60,-69,-73,-78,-84,-85,-86,-89,-88,180,-68,-70,-75,-92,-61,-83,-87,-71,-72,-76,-77,-80,-126,-62,-63,-64,-65,-66,-67,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'OR':([78,79,81,82,83,84,85,96,97,120,121,123,124,125,126,127,139,140,162,165,169,182,216,217,263,264,265,266,267,274,287,288,289,290,291,292,314,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,-60,-69,-73,-78,-84,-85,-86,-89,-88,181,-68,-70,-75,-92,-61,-83,-87,-71,-72,-76,-77,-80,-126,-62,-63,-64,-65,-66,-67,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'RIGHTP':([78,79,81,82,83,84,85,95,96,97,118,120,121,123,124,125,126,127,129,134,135,136,139,140,153,154,155,156,158,159,160,162,165,168,169,170,173,174,175,179,182,189,190,194,195,196,197,198,199,200,205,216,217,224,263,264,265,266,267,274,276,277,285,286,287,288,289,290,291,292,295,296,297,313,314,315,317,331,332,345,351,352,358,365,366,376,379,380,],[-74,-79,-81,-96,-97,-98,-95,138,-60,-69,-168,-73,-78,-84,-85,-86,-89,-88,-47,-139,-140,176,-59,-68,201,202,203,204,206,207,208,-70,-75,216,-92,221,-130,227,227,-56,-61,242,243,247,248,249,250,251,252,253,258,-83,-87,-131,-71,-72,-76,-77,-80,-126,314,-139,-57,-58,-62,-63,-64,-65,-66,-67,321,322,323,-130,-83,227,335,-131,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'MULTIPLY':([79,81,82,83,84,85,121,123,124,125,126,127,169,216,217,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-79,-81,-96,-97,-98,-95,166,-84,-85,-86,-89,-88,-92,-83,-87,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),'DIVIDE':([79,81,82,83,84,85,121,123,124,125,126,127,169,216,217,267,274,314,332,345,351,352,358,365,366,376,379,380,],[-79,-81,-96,-97,-98,-95,167,-84,-85,-86,-89,-88,-92,-83,-87,-80,-126,-83,-132,-83,-127,-128,-105,-91,-94,-83,-106,-93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'main_quad':([3,],[4,]),'add_program_function':([4,],[5,]),'program_prime':([6,8,9,],[7,17,18,]),'vars':([6,8,9,31,39,270,309,],[8,8,8,39,39,309,309,]),'modules':([6,8,9,],[9,9,9,]),'program_second_prime':([6,8,9,],[10,10,10,]),'type':([6,8,9,12,31,39,57,220,270,309,],[11,11,11,22,11,11,88,88,11,11,]),'vars_prime':([11,32,],[19,55,]),'modules_prime':([12,],[21,]),'fill_main':([13,],[24,]),'vars_third_prime':([19,55,],[25,76,]),'store_variable':([19,26,55,],[27,32,27,]),'save_id':([20,],[28,]),'void_type':([23,],[30,]),'vars_fourth_prime':([27,],[33,]),'vars_second_prime':([28,],[35,]),'change_dimension':([28,],[36,]),'add_module':([29,],[37,]),'program_third_prime':([31,39,],[38,58,]),'body':([31,39,41,94,233,270,279,309,339,],[40,40,61,137,284,310,316,310,356,]),'statement':([31,39,41,94,178,233,270,279,309,319,339,],[41,41,41,41,232,41,41,41,41,338,41,]),'assignment':([31,39,41,94,178,233,270,279,309,319,339,],[42,42,42,42,42,42,42,42,42,42,42,]),'print':([31,39,41,94,178,233,270,279,309,319,339,],[43,43,43,43,43,43,43,43,43,43,43,]),'functioncall':([31,39,41,86,94,178,233,270,279,309,319,339,],[44,44,44,127,44,44,44,44,44,44,44,44,]),'condition':([31,39,41,94,178,233,270,279,309,319,339,],[45,45,45,45,45,45,45,45,45,45,45,]),'specialfunction':([31,39,41,94,178,233,270,279,309,319,339,],[46,46,46,46,46,46,46,46,46,46,46,]),'input':([31,39,41,94,178,233,270,279,309,319,339,],[47,47,47,47,47,47,47,47,47,47,47,]),'body_prime':([41,],[60,]),'push_id':([48,85,],[67,126,]),'verify_function':([48,128,],[68,68,]),'save_jump':([50,51,],[70,71,]),'condition_prime':([52,318,],[72,336,]),'exp':([56,73,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,209,212,213,222,223,226,234,235,236,237,238,239,240,241,244,275,280,307,328,361,370,],[77,97,97,97,97,173,189,190,191,192,193,194,195,196,197,198,200,261,263,264,272,273,97,97,97,97,97,97,97,97,97,295,313,97,325,346,368,373,]),'term':([56,73,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,209,212,213,214,215,222,223,226,234,235,236,237,238,239,240,241,244,275,280,307,328,361,370,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,265,266,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'factor':([56,73,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,209,212,213,214,215,222,223,226,234,235,236,237,238,239,240,241,244,275,280,307,328,361,370,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'operand':([56,73,92,93,122,132,141,142,143,144,145,146,147,148,149,150,152,209,212,213,214,215,222,223,226,234,235,236,237,238,239,240,241,244,275,280,307,328,361,370,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'modules_second_prime':([57,220,],[87,269,]),'save_assignment_id':([67,],[90,]),'fake_bottom':([69,80,91,172,268,348,364,],[92,122,132,223,307,361,370,]),'compoundexp':([73,93,234,235,280,],[95,136,285,286,317,]),'expression':([73,92,93,122,226,234,235,236,237,238,239,240,241,280,],[96,134,96,168,277,96,96,287,288,289,290,291,292,96,]),'specialfunction_prime':([74,],[98,]),'eval_term':([78,],[120,]),'eval_factor':([79,],[121,]),'evaluate_operation_int':([82,],[123,]),'evaluate_operation_float':([83,],[124,]),'evaluate_operation_char':([84,],[125,]),'assignment_second_prime':([90,],[130,]),'save_id_array':([90,169,],[131,218,]),'print_prime':([92,],[133,]),'eval_logic':([96,],[139,]),'eval_relational':([97,],[140,]),'input_quad':([118,],[160,]),'first_dimension':([119,],[161,]),'exp_prime':([120,],[162,]),'term_prime':([121,],[165,]),'save_id_operand':([126,],[169,]),'add_parameter':([129,],[170,]),'print_quad':([134,277,],[174,315,]),'print_string_quad':([135,],[175,]),'gotof_quad':([138,176,],[178,229,]),'compoundexp_prime':([139,],[179,]),'expression_prime':([140,],[182,]),'vars_fifth_prime':([161,],[210,]),'allocate_sequential_memory':([161,324,],[211,344,]),'push_operator':([163,164,166,167,171,180,181,183,184,185,186,187,188,],[212,213,214,215,222,234,235,236,237,238,239,240,241,]),'operand_prime':([169,],[217,]),'modules_third_prime':([170,],[219,]),'verify_parameter':([173,313,],[224,331,]),'print_second_prime':([174,175,315,],[225,228,333,]),'condition_second_prime':([178,],[231,]),'no_argument_quad':([201,202,203,204,206,207,],[254,255,256,257,259,260,]),'set_internal_dimension_one':([211,344,],[262,357,]),'pop_fake_bottom':([216,227,312,314,345,372,376,],[267,278,330,332,358,375,379,]),'assignment_prime':([222,],[271,]),'functioncall_prime':([224,331,],[274,351,]),'verify_param_count':([224,331,],[276,276,]),'condition_third_prime':([232,320,],[281,340,]),'goto_if_fill':([232,320,338,362,],[282,282,355,369,]),'one_argument_quad':([242,243,247,248,249,250,251,253,],[293,294,298,299,300,301,302,304,]),'special_string_quad':([252,258,],[303,305,]),'modules_fourth_prime':([270,309,],[308,326,]),'eval_assignment':([272,],[311,]),'goto_else':([283,],[319,]),'second_dimension':([306,],[324,]),'modules_fifth_prime':([310,],[327,]),'condition_fourth_prime':([319,],[337,]),'two_argument_quad':([321,],[341,]),'two_argument_string_quad':([322,323,],[342,343,]),'endproc_quad':([329,371,],[347,374,]),'assignment_third_prime':([330,],[349,]),'quad_ver_one':([330,358,],[350,366,]),'go_sub_quad':([332,],[352,]),'goto_while_fill':([334,],[353,]),'gotov_quad':([335,],[354,]),'return_quad':([346,],[359,]),'print_me':([347,374,],[360,377,]),'set_internal_dimension_two':([357,],[363,]),'operand_second_prime':([358,],[365,]),'quad_ver_two':([375,379,],[378,380,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PRGM ID main_quad add_program_function EOS program_prime','program',6,'p_program','nansus.py',65),
  ('program_prime -> vars program_prime','program_prime',2,'p_program_prime','nansus.py',69),
  ('program_prime -> modules program_prime','program_prime',2,'p_program_prime','nansus.py',70),
  ('program_prime -> program_second_prime','program_prime',1,'p_program_prime','nansus.py',71),
  ('program_second_prime -> MAIN fill_main LEFTBRACE program_third_prime','program_second_prime',4,'p_program_second_prime','nansus.py',75),
  ('program_third_prime -> vars program_third_prime','program_third_prime',2,'p_program_third_prime','nansus.py',80),
  ('program_third_prime -> body RIGHTBRACE EOS','program_third_prime',3,'p_program_third_prime','nansus.py',81),
  ('main_quad -> <empty>','main_quad',0,'p_main_quad','nansus.py',86),
  ('add_program_function -> <empty>','add_program_function',0,'p_add_program_function','nansus.py',93),
  ('fill_main -> <empty>','fill_main',0,'p_fill_main','nansus.py',103),
  ('vars -> type vars_prime vars_third_prime','vars',3,'p_vars','nansus.py',116),
  ('vars_prime -> ID save_id vars_second_prime','vars_prime',3,'p_vars_prime','nansus.py',120),
  ('vars_second_prime -> change_dimension LEFTB exp RIGHTB first_dimension vars_fifth_prime','vars_second_prime',6,'p_vars_second_prime','nansus.py',125),
  ('vars_second_prime -> <empty>','vars_second_prime',0,'p_vars_second_prime','nansus.py',126),
  ('vars_third_prime -> SEPARATOR store_variable vars_prime vars_third_prime','vars_third_prime',4,'p_vars_third_prime','nansus.py',131),
  ('vars_third_prime -> store_variable vars_fourth_prime','vars_third_prime',2,'p_vars_third_prime','nansus.py',132),
  ('vars_fourth_prime -> EOS','vars_fourth_prime',1,'p_vars_fourth_prime','nansus.py',136),
  ('vars_fifth_prime -> LEFTB exp RIGHTB second_dimension allocate_sequential_memory set_internal_dimension_one set_internal_dimension_two','vars_fifth_prime',7,'p_vars_fifth_prime','nansus.py',139),
  ('vars_fifth_prime -> allocate_sequential_memory set_internal_dimension_one','vars_fifth_prime',2,'p_vars_fifth_prime','nansus.py',140),
  ('save_id -> <empty>','save_id',0,'p_save_id','nansus.py',146),
  ('change_dimension -> <empty>','change_dimension',0,'p_change_dimension','nansus.py',151),
  ('store_variable -> <empty>','store_variable',0,'p_store_variable','nansus.py',156),
  ('first_dimension -> <empty>','first_dimension',0,'p_first_dimension','nansus.py',163),
  ('second_dimension -> <empty>','second_dimension',0,'p_second_dimension','nansus.py',173),
  ('set_internal_dimension_one -> <empty>','set_internal_dimension_one',0,'p_set_internal_dimension_one','nansus.py',184),
  ('set_internal_dimension_two -> <empty>','set_internal_dimension_two',0,'p_set_internal_dimension_two','nansus.py',190),
  ('allocate_sequential_memory -> <empty>','allocate_sequential_memory',0,'p_allocate_sequential_memory','nansus.py',197),
  ('type -> TYPEINT','type',1,'p_type','nansus.py',204),
  ('type -> TYPEFLOAT','type',1,'p_type','nansus.py',205),
  ('type -> TYPECHAR','type',1,'p_type','nansus.py',206),
  ('body -> statement body_prime','body',2,'p_body','nansus.py',219),
  ('body_prime -> body','body_prime',1,'p_body_prime','nansus.py',222),
  ('body_prime -> <empty>','body_prime',0,'p_body_prime','nansus.py',223),
  ('modules -> FUNCTION modules_prime ID add_module LEFTP modules_second_prime','modules',6,'p_modules','nansus.py',233),
  ('modules_prime -> type','modules_prime',1,'p_modules_prime','nansus.py',237),
  ('modules_prime -> NOTYPE void_type','modules_prime',2,'p_modules_prime','nansus.py',238),
  ('modules_second_prime -> type ID add_parameter modules_third_prime','modules_second_prime',4,'p_modules_second_prime','nansus.py',242),
  ('modules_third_prime -> SEPARATOR modules_second_prime','modules_third_prime',2,'p_modules_third_prime','nansus.py',246),
  ('modules_third_prime -> RIGHTP LEFTBRACE modules_fourth_prime','modules_third_prime',3,'p_modules_third_prime','nansus.py',247),
  ('modules_fourth_prime -> vars modules_fourth_prime','modules_fourth_prime',2,'p_modules_fourth_prime','nansus.py',251),
  ('modules_fourth_prime -> body modules_fifth_prime','modules_fourth_prime',2,'p_modules_fourth_prime','nansus.py',252),
  ('modules_fifth_prime -> RETURN exp return_quad EOS RIGHTBRACE endproc_quad print_me','modules_fifth_prime',7,'p_modules_fifth_prime','nansus.py',256),
  ('modules_fifth_prime -> RIGHTBRACE endproc_quad print_me','modules_fifth_prime',3,'p_modules_fifth_prime','nansus.py',257),
  ('print_me -> <empty>','print_me',0,'p_print_me','nansus.py',260),
  ('void_type -> <empty>','void_type',0,'p_void_type','nansus.py',265),
  ('add_module -> <empty>','add_module',0,'p_add_module','nansus.py',270),
  ('add_parameter -> <empty>','add_parameter',0,'p_add_parameter','nansus.py',276),
  ('return_quad -> <empty>','return_quad',0,'p_return_quad','nansus.py',281),
  ('endproc_quad -> <empty>','endproc_quad',0,'p_endproc_quad','nansus.py',286),
  ('statement -> assignment EOS','statement',2,'p_statement','nansus.py',295),
  ('statement -> print EOS','statement',2,'p_statement','nansus.py',296),
  ('statement -> functioncall EOS','statement',2,'p_statement','nansus.py',297),
  ('statement -> condition','statement',1,'p_statement','nansus.py',298),
  ('statement -> specialfunction EOS','statement',2,'p_statement','nansus.py',299),
  ('statement -> input EOS','statement',2,'p_statement','nansus.py',300),
  ('compoundexp -> expression eval_logic compoundexp_prime','compoundexp',3,'p_compoundexp','nansus.py',319),
  ('compoundexp_prime -> AND push_operator compoundexp','compoundexp_prime',3,'p_compoundexp_prime','nansus.py',322),
  ('compoundexp_prime -> OR push_operator compoundexp','compoundexp_prime',3,'p_compoundexp_prime','nansus.py',323),
  ('compoundexp_prime -> <empty>','compoundexp_prime',0,'p_compoundexp_prime','nansus.py',324),
  ('eval_logic -> <empty>','eval_logic',0,'p_eval_logic','nansus.py',328),
  ('expression -> exp eval_relational expression_prime','expression',3,'p_expression','nansus.py',341),
  ('expression_prime -> GREATER push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',344),
  ('expression_prime -> LESS push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',345),
  ('expression_prime -> EQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',346),
  ('expression_prime -> NOTEQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',347),
  ('expression_prime -> GREATEREQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',348),
  ('expression_prime -> LESSEQUAL push_operator expression','expression_prime',3,'p_expression_prime','nansus.py',349),
  ('expression_prime -> <empty>','expression_prime',0,'p_expression_prime','nansus.py',350),
  ('eval_relational -> <empty>','eval_relational',0,'p_eval_relational','nansus.py',354),
  ('exp -> term eval_term exp_prime','exp',3,'p_exp','nansus.py',368),
  ('exp_prime -> PLUS push_operator exp','exp_prime',3,'p_exp_prime','nansus.py',371),
  ('exp_prime -> MINUS push_operator exp','exp_prime',3,'p_exp_prime','nansus.py',372),
  ('exp_prime -> <empty>','exp_prime',0,'p_exp_prime','nansus.py',373),
  ('eval_term -> <empty>','eval_term',0,'p_eval_term','nansus.py',377),
  ('term -> factor eval_factor term_prime','term',3,'p_term','nansus.py',389),
  ('term_prime -> MULTIPLY push_operator term','term_prime',3,'p_term_prime','nansus.py',392),
  ('term_prime -> DIVIDE push_operator term','term_prime',3,'p_term_prime','nansus.py',393),
  ('term_prime -> <empty>','term_prime',0,'p_term_prime','nansus.py',394),
  ('eval_factor -> <empty>','eval_factor',0,'p_eval_factor','nansus.py',398),
  ('factor -> LEFTP fake_bottom expression RIGHTP pop_fake_bottom','factor',5,'p_factor','nansus.py',410),
  ('factor -> operand','factor',1,'p_factor','nansus.py',411),
  ('fake_bottom -> <empty>','fake_bottom',0,'p_fake_bottom','nansus.py',415),
  ('pop_fake_bottom -> <empty>','pop_fake_bottom',0,'p_pop_fake_bottom','nansus.py',420),
  ('operand -> CSTI evaluate_operation_int','operand',2,'p_operand','nansus.py',430),
  ('operand -> CSTF evaluate_operation_float','operand',2,'p_operand','nansus.py',431),
  ('operand -> CSTC evaluate_operation_char','operand',2,'p_operand','nansus.py',432),
  ('operand -> ID push_id save_id_operand operand_prime','operand',4,'p_operand','nansus.py',433),
  ('operand -> FUNCTION functioncall','operand',2,'p_operand','nansus.py',434),
  ('save_id_operand -> <empty>','save_id_operand',0,'p_save_id_operand','nansus.py',437),
  ('save_id_array -> <empty>','save_id_array',0,'p_save_id_array','nansus.py',441),
  ('operand_prime -> save_id_array LEFTB fake_bottom exp RIGHTB pop_fake_bottom operand_second_prime','operand_prime',7,'p_operand_prime','nansus.py',446),
  ('operand_prime -> <empty>','operand_prime',0,'p_operand_prime','nansus.py',447),
  ('operand_second_prime -> LEFTB fake_bottom exp RIGHTB pop_fake_bottom quad_ver_two','operand_second_prime',6,'p_operand_second_prime','nansus.py',450),
  ('operand_second_prime -> quad_ver_one','operand_second_prime',1,'p_operand_second_prime','nansus.py',451),
  ('push_id -> <empty>','push_id',0,'p_push_id','nansus.py',455),
  ('evaluate_operation_int -> <empty>','evaluate_operation_int',0,'p_evaluate_operation_int','nansus.py',460),
  ('evaluate_operation_float -> <empty>','evaluate_operation_float',0,'p_evaluate_operation_float','nansus.py',464),
  ('evaluate_operation_char -> <empty>','evaluate_operation_char',0,'p_evaluate_operation_char','nansus.py',468),
  ('assignment -> ID push_id save_assignment_id assignment_second_prime EQUALS push_operator assignment_prime','assignment',7,'p_assignment','nansus.py',477),
  ('assignment_prime -> exp eval_assignment','assignment_prime',2,'p_assignment_prime','nansus.py',480),
  ('assignment_second_prime -> <empty>','assignment_second_prime',0,'p_assignment_second_prime','nansus.py',484),
  ('assignment_second_prime -> save_id_array LEFTB fake_bottom exp RIGHTB pop_fake_bottom assignment_third_prime','assignment_second_prime',7,'p_assignment_second_prime','nansus.py',485),
  ('assignment_third_prime -> LEFTB fake_bottom exp RIGHTB pop_fake_bottom quad_ver_two','assignment_third_prime',6,'p_assignment_third_prime','nansus.py',488),
  ('assignment_third_prime -> quad_ver_one','assignment_third_prime',1,'p_assignment_third_prime','nansus.py',489),
  ('quad_ver_one -> <empty>','quad_ver_one',0,'p_quad_ver_one','nansus.py',493),
  ('quad_ver_two -> <empty>','quad_ver_two',0,'p_quad_ver_two','nansus.py',497),
  ('eval_assignment -> <empty>','eval_assignment',0,'p_eval_assignment','nansus.py',502),
  ('save_assignment_id -> <empty>','save_assignment_id',0,'p_save_assignment_id','nansus.py',508),
  ('condition -> WHILE save_jump LEFTP compoundexp RIGHTP gotof_quad LEFTBRACE body RIGHTBRACE goto_while_fill','condition',10,'p_condition','nansus.py',518),
  ('condition -> DO save_jump LEFTBRACE body RIGHTBRACE WHILE LEFTP compoundexp RIGHTP gotov_quad','condition',10,'p_condition','nansus.py',519),
  ('condition -> IF condition_prime','condition',2,'p_condition','nansus.py',520),
  ('condition_prime -> LEFTP compoundexp RIGHTP gotof_quad condition_second_prime','condition_prime',5,'p_condition_prime','nansus.py',524),
  ('condition_second_prime -> statement condition_third_prime','condition_second_prime',2,'p_condition_second_prime','nansus.py',528),
  ('condition_second_prime -> LEFTBRACE body RIGHTBRACE condition_third_prime','condition_second_prime',4,'p_condition_second_prime','nansus.py',529),
  ('condition_third_prime -> goto_if_fill ELSEIF condition_prime','condition_third_prime',3,'p_condition_third_prime','nansus.py',533),
  ('condition_third_prime -> ELSE goto_else condition_fourth_prime','condition_third_prime',3,'p_condition_third_prime','nansus.py',534),
  ('condition_third_prime -> goto_if_fill','condition_third_prime',1,'p_condition_third_prime','nansus.py',535),
  ('condition_fourth_prime -> statement goto_if_fill','condition_fourth_prime',2,'p_condition_fourth_prime','nansus.py',539),
  ('condition_fourth_prime -> LEFTBRACE body RIGHTBRACE goto_if_fill','condition_fourth_prime',4,'p_condition_fourth_prime','nansus.py',540),
  ('save_jump -> <empty>','save_jump',0,'p_save_jump','nansus.py',544),
  ('gotof_quad -> <empty>','gotof_quad',0,'p_gotof_quad','nansus.py',549),
  ('goto_else -> <empty>','goto_else',0,'p_goto_else','nansus.py',554),
  ('gotov_quad -> <empty>','gotov_quad',0,'p_gotov_quad','nansus.py',559),
  ('goto_if_fill -> <empty>','goto_if_fill',0,'p_goto_if_fill','nansus.py',564),
  ('goto_while_fill -> <empty>','goto_while_fill',0,'p_goto_while_fill','nansus.py',571),
  ('functioncall -> ID verify_function LEFTP fake_bottom exp verify_parameter functioncall_prime','functioncall',7,'p_functioncall','nansus.py',585),
  ('functioncall_prime -> SEPARATOR exp verify_parameter functioncall_prime','functioncall_prime',4,'p_functioncall_prime','nansus.py',589),
  ('functioncall_prime -> verify_param_count RIGHTP pop_fake_bottom go_sub_quad','functioncall_prime',4,'p_functioncall_prime','nansus.py',590),
  ('verify_function -> <empty>','verify_function',0,'p_verify_function','nansus.py',594),
  ('verify_parameter -> <empty>','verify_parameter',0,'p_verify_parameter','nansus.py',601),
  ('verify_param_count -> <empty>','verify_param_count',0,'p_verify_param_count','nansus.py',607),
  ('go_sub_quad -> <empty>','go_sub_quad',0,'p_go_sub_quad','nansus.py',615),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','nansus.py',622),
  ('print -> PRINT LEFTP fake_bottom print_prime','print',4,'p_print','nansus.py',632),
  ('print_prime -> expression print_quad print_second_prime','print_prime',3,'p_print_prime','nansus.py',636),
  ('print_prime -> CSTS print_string_quad print_second_prime','print_prime',3,'p_print_prime','nansus.py',637),
  ('print_second_prime -> SEPARATOR expression print_quad print_second_prime','print_second_prime',4,'p_print_second_prime','nansus.py',641),
  ('print_second_prime -> RIGHTP pop_fake_bottom','print_second_prime',2,'p_print_second_prime','nansus.py',642),
  ('print_quad -> <empty>','print_quad',0,'p_print_quad','nansus.py',646),
  ('print_string_quad -> <empty>','print_string_quad',0,'p_print_string_quad','nansus.py',654),
  ('specialfunction -> JEDO POINT specialfunction_prime','specialfunction',3,'p_specialfunction','nansus.py',664),
  ('specialfunction_prime -> CIRCLE LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',668),
  ('specialfunction_prime -> SQUARE LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',669),
  ('specialfunction_prime -> RECTANGLE LEFTP exp SEPARATOR exp RIGHTP two_argument_quad','specialfunction_prime',7,'p_specialfunction_prime','nansus.py',670),
  ('specialfunction_prime -> DRAWDOT LEFTP exp SEPARATOR CSTS RIGHTP two_argument_string_quad','specialfunction_prime',7,'p_specialfunction_prime','nansus.py',671),
  ('specialfunction_prime -> ARCH LEFTP exp SEPARATOR CSTS RIGHTP two_argument_string_quad','specialfunction_prime',7,'p_specialfunction_prime','nansus.py',672),
  ('specialfunction_prime -> TRIANGLE LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',673),
  ('specialfunction_prime -> FORWARD LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',674),
  ('specialfunction_prime -> BACK LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',675),
  ('specialfunction_prime -> TURNRIGHT LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',676),
  ('specialfunction_prime -> TURNLEFT LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',677),
  ('specialfunction_prime -> COLOR LEFTP CSTS RIGHTP special_string_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',678),
  ('specialfunction_prime -> THICKNESS LEFTP exp RIGHTP one_argument_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',679),
  ('specialfunction_prime -> STARTPEN LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',680),
  ('specialfunction_prime -> CREATE LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',681),
  ('specialfunction_prime -> STOPPEN LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',682),
  ('specialfunction_prime -> STARTFILL LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',683),
  ('specialfunction_prime -> FILLSHAPE LEFTP CSTS RIGHTP special_string_quad','specialfunction_prime',5,'p_specialfunction_prime','nansus.py',684),
  ('specialfunction_prime -> STOPFILL LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',685),
  ('specialfunction_prime -> RESTART LEFTP RIGHTP no_argument_quad','specialfunction_prime',4,'p_specialfunction_prime','nansus.py',686),
  ('specialfunction_prime -> <empty>','specialfunction_prime',0,'p_specialfunction_prime','nansus.py',687),
  ('no_argument_quad -> <empty>','no_argument_quad',0,'p_no_argument_quad','nansus.py',691),
  ('one_argument_quad -> <empty>','one_argument_quad',0,'p_one_argument_quad','nansus.py',697),
  ('two_argument_quad -> <empty>','two_argument_quad',0,'p_two_argument_quad','nansus.py',703),
  ('two_argument_string_quad -> <empty>','two_argument_string_quad',0,'p_two_argument_string_quad','nansus.py',709),
  ('special_string_quad -> <empty>','special_string_quad',0,'p_special_string_quad','nansus.py',715),
  ('input -> READINPUT LEFTP ID input_quad RIGHTP','input',5,'p_input','nansus.py',726),
  ('input_quad -> <empty>','input_quad',0,'p_input_quad','nansus.py',730),
]
